doctype html
head
  meta(http-equiv='Content-Type' content='text/html; charset=UTF-8')
  // Meta, title, CSS, favicons, etc.
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  title Account
  link(href='https://cdn.datatables.net/1.10.19/css/dataTables.material.min.css' rel='stylesheet')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/material-design-lite/1.1.0/material.min.css' rel='stylesheet')
  //- link(href='https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css' rel='stylesheet')
  //- link(href='https://cdn.datatables.net/1.10.19/css/dataTables.semanticui.min.css' rel='stylesheet')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css' rel='stylesheet')
  link(href='https://cdn.datatables.net/buttons/1.5.6/css/buttons.semanticui.min.css' rel='stylesheet')

  // Bootstrap
  link(rel='stylesheet' href='../vendors/bootstrap/dist/css/bootstrap.min.css')
  
  // Font Awesome
  link(rel='stylesheet' href='../vendors/font-awesome/css/font-awesome.min.css' )
  // NProgress
  link(href='../vendors/nprogress/nprogress.css' rel='stylesheet')
  // bootstrap-daterangepicker
  link(href='../vendors/bootstrap-daterangepicker/daterangepicker.css' rel='stylesheet')
  // Custom Theme Style
  link(href='../build/css/custom.min.css' rel='stylesheet')
  
  //- script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
  //- script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy' crossorigin='anonymous')

  // jQuery
  script(type="text/javascript" src='../vendors/jquery/dist/jquery.min.js')
  // Bootstrap
  script(type="text/javascript" src='../vendors/bootstrap/dist/js/bootstrap.min.js')

  //- <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
  //- <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
  script(src="https://www.gstatic.com/charts/loader.js")
  script.
  style.
    .switch {
      position: relative;
      display: inline-block;
      width: 32px;
      height: 20px;
    }

    /* Hide default HTML checkbox */
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    /* The slider */
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      -webkit-transition: .4s;
      transition: .4s;
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 12px;
      width: 12px;
      left: 2px;
      bottom: 4px;
      background-color: white;
      -webkit-transition: .4s;
      transition: .4s;
    }

    input:checked + .slider {
      background-color: #2196F3;
    }

    input:focus + .slider {
      box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
      -webkit-transform: translateX(12px);
      -ms-transform: translateX(12px);
      transform: translateX(16px);
    }

    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }

    .slider.round:before {
      border-radius: 50%;
    }
  

body.nav-md
  .container.body
    .main_container
      .col-md-3.left_col
        .left_col.scroll-view
          .navbar.nav_title(style='border: 0;')
            a.site_title.d-flex.p-3.bg-secondary(href='index.html')
              img.img-circle(src='images/logo.jpg')
              span &nbsp;Prima Cash
          .clearfix
          // menu profile quick info
          .profile.clearfix
            .profile_pic
              img.img-circle.profile_img(src='images/img.jpg' alt='...')
            .profile_info
              span Welcome,
              h2 #{username}
          // /menu profile quick info
          br
          // sidebar menu
          #sidebar-menu.main_menu_side.hidden-print.main_menu
            .menu_section
              h3 General
              ul.nav.side-menu
                li
                  a(href='/dashboard')
                    i.fa.fa-home
                    |  Home 
                li.active
                  a
                    i.fa.fa-users
                    |  Account 
                li
                  a(href='/category')
                    i.fa.fa-list-ol
                    |  Category 
                li
                  a
                    i.fa.fa-money
                    |  Transaction 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='/income') Income
                    li
                      a(href='/expense') Expense
                    li
                      a(href='/transfer') Transfer
                li
                  a
                    i.fa.fa-clipboard
                    |  Report
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='/report/ac') Account&amp;Category Report
                    li
                      a(href='/report/cob') Chart Of Balance
                    li
                      a(href='media_gallery.html') Expense Report
                    li
                      a(href='typography.html') Transfer Report
                li
                  a
                    i.fa.fa-bar-chart-o
                    |  Charts 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='general_elements.html') Income Chart
                    li
                      a(href='media_gallery.html') Expense Chart
                    li
                      a(href='typography.html') Transfer Chart
                    li
                      a(href='chart.html') All Chart
            .menu_section
              h3 Live On
              ul.nav.side-menu
                li
                  a
                    i.fa.fa-bug
                    |  Additional Pages 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='e_commerce.html') E-commerce
                    li
                      a(href='projects.html') Projects
                    li
                      a(href='project_detail.html') Project Detail
                    li
                      a(href='contacts.html') Contacts
                    li
                      a(href='profile.html') Profile
                li
                  a
                    i.fa.fa-windows
                    |  Extras 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='page_403.html') 403 Error
                    li
                      a(href='page_404.html') 404 Error
                    li
                      a(href='page_500.html') 500 Error
                    li
                      a(href='plain_page.html') Plain Page
                    li
                      a(href='login.html') Login Page
                    li
                      a(href='pricing_tables.html') Pricing Tables
                li
                  a
                    i.fa.fa-sitemap
                    |  Multilevel Menu 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='#level1_1') Level One
                    li
                      a
                        | Level One
                        span.fa.fa-chevron-down
                      ul.nav.child_menu
                        li.sub_menu
                          a(href='level2.html') Level Two
                        li
                          a(href='#level2_1') Level Two
                        li
                          a(href='#level2_2') Level Two
                    li
                      a(href='#level1_2') Level One
                li
                  a(href='javascript:void(0)')
                    i.fa.fa-laptop
                    |  Landing Page 
                    span.label.label-success.pull-right Coming Soon
          // /sidebar menu
          // /menu footer buttons
          .sidebar-footer.hidden-small
            a(data-toggle='tooltip' data-placement='top' title='Settings')
              span.glyphicon.glyphicon-cog(aria-hidden='true')
            a(data-toggle='tooltip' data-placement='top' title='FullScreen')
              span.glyphicon.glyphicon-fullscreen(aria-hidden='true')
            a#refresh(data-toggle='tooltip' data-placement='top' title='Refresh')
              span.glyphicon.glyphicon-refresh(aria-hidden='true')
            a(data-toggle='tooltip' data-placement='top' title='Logout' onclick='logout();')
              span.glyphicon.glyphicon-log-out(aria-hidden='true')
          // /menu footer buttons
      // top navigation

      .top_nav
        .nav_menu
          nav
            .nav.toggle
              a#menu_toggle
                i.fa.fa-bars
            ul.nav.navbar-nav.navbar-right
              li
                a.user-profile.dropdown-toggle(href='javascript:;' data-toggle='dropdown' aria-expanded='false')
                  img(src='images/img.jpg' alt='')
                  | #{username}
                  span.fa.fa-angle-down
                ul.dropdown-menu.dropdown-usermenu.pull-right
                  li
                    a(href='javascript:;')  Profile
                  li
                    a(href='javascript:;')
                      span.badge.bg-red.pull-right 50%
                      span Settings
                  li
                    a(href='javascript:;') Help
                  li
                    a(onclick='logout();')
                      i.fa.fa-sign-out.pull-right
                      |  Log Out
              li.dropdown(role='presentation')
                a.dropdown-toggle.info-number(href='javascript:;' data-toggle='dropdown' aria-expanded='false')
                  i.fa.fa-envelope-o
                  span.badge.bg-green 6
                ul#menu1.dropdown-menu.list-unstyled.msg_list(role='menu')
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    .text-center
                      a
                        strong See All Alerts
                        i.fa.fa-angle-right

      // /top navigation
      // page content
      .right_col(role='main')
        .row.top_tiles
          .col-md-12
            .x_panel
              .x_title
                h2
                  | Account
                  // Button trigger modal
                
                ul.navbar-right.panel_toolbox(style='list-style-type: none;')
                  li
                    a.collapse-link
                      i.fa.fa-chevron-up
                .clearfix
              .x_content
                .row(style='border-bottom: 1px solid #E0E0E0; padding-bottom: 5px; margin-bottom: 5px;')
                  button.btn.btn-primary(data-toggle='modal' data-target='#Income' style='margin-left: 10px;margin-bottom:15px')
                    i.fa.fa-plus-circle.fw-fa
                    |  Add Account
                  // Modal
                  #Income.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                    .modal-dialog.modal-dialog-centered(role='document')
                      .modal-content
                        .modal-header
                          h2#exampleModalLongTitle.modal-title(style='display:inline') Create New Account
                          button.close(type='button' data-dismiss='modal' aria-label='Close')
                            h1.pointer(aria-hidden='true' style="color:red") &times;
                        form
                          .modal-body
                            .row
                              .col-md-8
                                label(for='1') Account Name
                                input#nameacc.form-control(type='text' name='nameacc' oninput='refresh()' autocomplete='off')
                                strong#errornameacc(style="color:red;display:none") Error

                                label(for='3' style='margin-top:10px') Account Currency
                                select#currency.form-control(name='currency' onchange='refresh()')
                                  option(value='0') Select Currency
                                  option(value='IDR') IDR
                                  option(value='USD') USD
                                  option(value='MYR') MYR
                                  option(value='SGD') SGD
                                strong#errorcurrency(style="color:red;display:none") Error

                                label(for='2' style='margin-top:10px') Initial Amount
                                input#amount.form-control(type='number' name='ammount' oninput='refresh()')
                                strong#erroramount(style="color:red;display:none") Error

                                label(for='3' style='margin-top:10px') Account Category
                                .select
                                  img#imagename(style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png') 
                                    
                                  select#selectname.form-control(style='width:338px;display:inline-block' onchange='categname()' name='option' title="Select your category")
                                      option(value='0' selected='') Select
                                      each resu in list1
                                          option(value=''+[resu.category_name]) #{resu.category_name}
                                strong#errorcategory(style="color:red;display:none") Error

                          .modal-footer
                            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                            button.btn.btn-primary(type='button' onclick="addaccount()") Add
                  
                  button.btn.btn-primary(data-toggle='modal' data-target='#Shared' style='margin-left: 10px;margin-bottom:15px')
                    i.fa.fa-plus-circle.fw-fa
                    |  Add Shared Account
                  // Modal
                  #Shared.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                    .modal-dialog.modal-dialog-centered(role='document')
                      .modal-content
                        .modal-header
                          h2#exampleModalLongTitle.modal-title(style='display:inline') Create New Shared Account
                          button.close(type='button' data-dismiss='modal' aria-label='Close')
                            h1.pointer(aria-hidden='true' style="color:red") &times;
                        form
                          .modal-body
                            .row
                              .col-md-8
                                label(for='1') Accounts Username/Email
                                input#sharedusername.form-control(type='text' name='username' oninput='refresh()' autocomplete='off')
                                strong#errorsharedusername(style="color:red;display:none") Error
                                label(for='1') Account Name
                                input#sharednameacc.form-control(type='text' name='nameacc' oninput='refresh()' autocomplete='off')
                                strong#errorsharednameacc(style="color:red;display:none") Error

                          .modal-footer
                            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                            button.btn.btn-primary(type='button' onclick="addsharedaccount()") Add

                  .table-responsive-md.col-md-12
                    table#main_table.table.table-hover.table-bordered(cellpadding="1" cellspacing="1")
                      thead
                        tr
                          td Account Last Used
                          td Account Name
                          td Account Current Balance
                          td Account Category
                          td Status
                          td Tools
                  .table-responsive-md.col-md-12
                    table#sharedmain_table.table.table-hover.table-bordered(cellpadding="1" cellspacing="1")
                      thead
                        tr
                          td Account Last Used
                          td Account Name
                          td Account Shared
                          td Account Current Balance
                          td Account Category
                          td Status
                          td Tools
                  each r, index in list
                    // Modal
                    div.modal.fade(id="edit"+r.account_name tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                      .modal-dialog.modal-dialog-centered(role='document')
                        .modal-content
                          .modal-header
                            h2#exampleModalLongTitle.modal-title(style="display:inline") Edit Account
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                              h1(aria-hidden='true' style="color:red") &times;
                          form(action='/account/editaccount' method='post')
                            .modal-body
                              .row
                                .col-md-8
                                  label(for='1') Account Name
                                  input#first.form-control(type='text' name='editnameacc' value=''+[r.account_name])
                                  label(for='3' style='margin-top:10px') Account Currency
                                  select.form-control(name='editcurrency')
                                    option(value=''+[r.account_currency]) #{r.account_currency}
                                    -var listcurrency=['IDR','USD','MYR','SGD'];
                                    //-var country=['Indonesia','USA','Malaysia','Singapura'];
                                    each c in listcurrency
                                      if(r.account_currency==[c])
                                      else
                                        option(value=[c]) #{c}
                                      
                                  label(for='2'  style='margin-top:10px') Initial Ammount
                                  input#second.form-control(type='number' name='editammount' value=''+[r.account_balance_current])
                                  input(type='hidden' name='beforeeditaccs' value=''+[r.account_name])
                                  label(for='4'  style='margin-top:10px') Account Category
                                  .select
                                    each x in list1
                                      if(r.account_category==[x.category_name])
                                        if([x.category_image]==31)
                                          img(id='editimagename'+index style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/add.png') 
                                        else
                                          img(id='editimagename'+index style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+r.account_category+'.png') 

                                    select.form-control(id='editselectname'+index style='width:338px;display:inline-block' onchange='editcategname('+index+')' name='editoption' title="Select your category")
                                        option(value=''+r.account_category selected) #{r.account_category}
                                        each b, index in list1
                                          if(r.account_category==[b.category_name])

                                          else
                                            option(value=''+[b.category_name]) #{b.category_name}

                            .modal-footer
                              button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                              button.btn.btn-primary(type='submit') Edit

                            //- button.btn.btn-outline-primary
                            //-   i.fa.fa-pencil
                    // Modal
                    div.modal.fade(id='delete'+r.account_name tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                      .modal-dialog.modal-dialog-centered(role='document')
                        .modal-content
                          .modal-header
                            h2#exampleModalLongTitle.modal-title(style='display:inline') Delete Account
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                              h1(aria-hidden='true' style="color:red") &times;
                          form(action='/account/deleteaccount' method='post')
                            .modal-body
                              .row
                                .col-md-12
                                  //label(for='1') Name Category
                                  //input#first.form-control(type='text' name='namecate')
                                  p Are you sure to delete your account #{r.account_name} ?
                                  //input#deletecatnums.form-control(type='hidden' name='deletecategnums' value=''+[r.category_image])
                                  input(type='hidden' name='beforedeleteaccname' value=''+r.account_name)
                            .modal-footer
                              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
                              button.btn.btn-primary(type='submit') Delete

                    //- #main_table(style="width: 600px;height:400px;")
                    //- #listaccount_chart(style="height:400px;")
            //- .col-md-4
            //-   .x_panel
            //-     .x_title
            //-       h2
            //-         | List Account
            //-       ul.navbar-right.panel_toolbox(style='list-style-type: none;')
            //-         li
            //-           a.collapse-link
            //-             i.fa.fa-chevron-up
            //-       .clearfix
            //-     .x_content
                  //- .row.w3-margin-bottom
                  //-   .table-responsive-md.col-md-12
                  //-     table.table.table-hover.table-striped.table-bordered(id="main_table" cellpadding="1" cellspacing="1")
                  //-       thead
                  //-         tr
                  //-           td Account Name
                  //-           td Account Category
                  //-           td Account Current Balance
                  //- #main_table(style="width: 325px;height:225px;")
      // /page content
      // footer content
      footer
        .pull-right
          | Gentelella - Bootstrap Admin Template by 
          a(href='https://colorlib.com') Colorlib
        .clearfix
      // /footer content
  script(src="./js/axios.min.js")
    // FastClick
  script(type="text/javascript" src='../vendors/fastclick/lib/fastclick.js')
  // NProgress
  script(type="text/javascript" src='../vendors/nprogress/nprogress.js')
  // Chart.js
  script(type="text/javascript" src='../vendors/Chart.js/dist/Chart.min.js')
  // jQuery Sparklines
  script(type="text/javascript" src='../vendors/jquery-sparkline/dist/jquery.sparkline.min.js')
  // Flot
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.pie.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.time.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.stack.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.resize.js')
  // Flot plugins
  script(type="text/javascript" src='../vendors/flot.orderbars/js/jquery.flot.orderBars.js')
  script(type="text/javascript" src='../vendors/flot-spline/js/jquery.flot.spline.min.js')
  script(type="text/javascript" src='../vendors/flot.curvedlines/curvedLines.js')
  // DateJS
  script(type="text/javascript" src='../vendors/DateJS/build/date.js')
  // bootstrap-daterangepicker
  script(type="text/javascript" src='../vendors/moment/min/moment.min.js')
  script(type="text/javascript" src='../vendors/bootstrap-daterangepicker/daterangepicker.js')
  // Custom Theme Scripts
  script(type="text/javascript" src='../build/js/custom.min.js')
  script(type="text/javascript" src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js")

  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js')
  
  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/dataTables.semanticui.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/dataTables.material.min.js')

  //- script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')
  //- script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')

  //- script(type='text/javascript' charset="utf8" src='https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js')

  script.
  
    $('#refresh').click(function() {
        location.reload();
    });
    //- var dataincome=[],dataexpense=[],datatransfer=[]
    axios.get('/is_login')
      .then(response=> {
        if(!response.data.status){
          window.location.replace ("/");
          console.log("Masuk")
        }
      //- axios.get('/account/listaccounts')
      //- .then(response=> {
      //-   var dataaccounts=response.data.dataaccount
        axios.get('/account/listaccount')
        .then(response=> {
          
          console.log(response.data.dataaccount)
          var rows=[], rowschart=[], rowsacc=[]
          //- var select_account = document.getElementById("select_account");
          //- for(var j=0;j<dataaccounts;j++){
            for(var i=0;i<response.data.dataaccount.length;i++){
              //- var option = document.createElement("option");
              //- option.text=response.data.dataaccount[i]["account_name"];
              //- option.value=response.data.dataaccount[i]["account_name"];
              //- console.log(response.data.dataaccount[i]["account_name"])
              //- select_account.add(option,null);
              if(response.data.dataaccount[i]["account_status"]=="1"){
                rows.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"],  response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"],response.data.dataaccount[i]["account_category"], 
                "<div class='row'>"+
                  "<div class='col-md-4'>"+
                  "<label class='switch'>"+
                    "<input type='checkbox' id="+'switch'+i+" onchange='switchstatus("+i+")' checked/>"+
                    "<span class='slider round'></span>"+
                    //- "<label style='margin-left:10px' class='custom-control-label' for="+'switch'+i+" id='labelswitch'"+i+"> Active</label>"+
                    "<input type='hidden' id="+'acc'+i+" value="+''+response.data.dataaccount[i]["account_name"]+" />"+
                  "</label>"+
                  "<label style='display:inline' class='custom-control-label' for="+'switch'+i+" id="+'labelswitch'+i+"> Active</label>"+
                  "</div>"+
                "</div>"
                ,"<button data-toggle='modal' data-target="+'#edit'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])
                
                //- rowsacc.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"], dataaccounts[j]["username"], response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"],response.data.dataaccount[i]["account_category"], 
                //- "<div class='row'>"+
                //-   "<div class='col-md-4'>"+
                //-   "<label class='switch'>"+
                //-     "<input type='checkbox' id="+'switch'+i+" onchange='switchstatus("+i+")' checked/>"+
                //-     "<span class='slider round'></span>"+
                //-     //- "<label style='margin-left:10px' class='custom-control-label' for="+'switch'+i+" id='labelswitch'"+i+"> Active</label>"+
                //-     "<input type='hidden' id="+'acc'+i+" value="+''+response.data.dataaccount[i]["account_name"]+" />"+
                //-   "</label>"+
                //-   "<label style='display:inline' class='custom-control-label' for="+'switch'+i+" id="+'labelswitch'+i+"> Active</label>"+
                //-   "</div>"+
                //- "</div>"
                //- ,"<button data-toggle='modal' data-target="+'#edit'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])
  
                rowschart.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"],  parseInt(response.data.dataaccount[i]["account_balance_current"])])
                console.log(rowschart[i])
                //- console.log(rowsacc[i])
              }
              else{
                rows.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"],  response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"],response.data.dataaccount[i]["account_category"], 
                "<div class='row'>"+
                  "<div class='col-md-4'>"+
                  "<label class='switch'>"+
                    "<input type='checkbox' id="+'switch'+i+" onchange='switchstatus("+i+")'/>"+
                    "<span class='slider round'></span>"+
                    //- "<label style='margin-left:10px' class='custom-control-label' for="+'switch'+i+" id='labelswitch'"+i+"> Active</label>"+
                    "<input type='hidden' id="+'acc'+i+" value="+''+response.data.dataaccount[i]["account_name"]+" />"+
                  "</label>"+
                  "<label style='display:inline' class='custom-control-label' for="+'switch'+i+" id="+'labelswitch'+i+"> Inactive</label>"+
                  "</div>"+
                "</div>"
                ,"<button data-toggle='modal' data-target="+'#edit'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])

                //- rowsacc.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"], dataaccounts[j]["username"], response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"],response.data.dataaccount[i]["account_category"], 
                //- "<div class='row'>"+
                //-   "<div class='col-md-4'>"+
                //-   "<label class='switch'>"+
                //-     "<input type='checkbox' id="+'switch'+i+" onchange='switchstatus("+i+")' checked/>"+
                //-     "<span class='slider round'></span>"+
                //-     //- "<label style='margin-left:10px' class='custom-control-label' for="+'switch'+i+" id='labelswitch'"+i+"> Active</label>"+
                //-     "<input type='hidden' id="+'acc'+i+" value="+''+response.data.dataaccount[i]["account_name"]+" />"+
                //-   "</label>"+
                //-   "<label style='display:inline' class='custom-control-label' for="+'switch'+i+" id="+'labelswitch'+i+"> Active</label>"+
                //-   "</div>"+
                //- "</div>"
                //- ,"<button data-toggle='modal' data-target="+'#edit'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.dataaccount[i]["account_name"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])

                rowschart.push([response.data.dataaccount[i]["account_lastused"],response.data.dataaccount[i]["account_name"],  parseInt(response.data.dataaccount[i]["account_balance_current"])])
                console.log(rowschart[i])
                //- console.log(rowsacc[i])
              }
            //- }
          }
          
          $('#main_table').DataTable( {
              data: rows,
              dom: 'Bfrtip',
              columnDefs: [ {
                "targets": 2,
                "className":"text-right"
              },
              {
                "targets": [0,1,3],
                "className":"text-center"
              },
              {
                "targets": 4,
                "orderable": false
              },
              {
                "targets": 5,
                "orderable": false,
                "className":"text-center"
              }
              ],
              //- columnDefs: [
              //-   {
              //-       targets: 1,
              //-       className: 'dt-body-right'
              //-   }
              //- ],
              lengthMenu: [
                [ 10, 25, 50, -1 ],
                [ '10 rows', '25 rows', '50 rows', 'Show all' ]
              ],
              //- buttons: [
                  
              //- ]
              buttons: [
                  'pageLength',
                  {
                      extend: 'pdfHtml5',
                      download: 'open'
                  }
              ]
          } );
          //- google.charts.load('current', {'packages':['table']});
          //- google.charts.setOnLoadCallback(drawTable);
          
          //- function drawTable() {
          //-   var datatable = new google.visualization.DataTable();
          //-   datatable.addColumn('string', 'Nama');
          //-   datatable.addColumn('string', 'Current_Balance');
          //-   datatable.addColumn('boolean', 'Status');
          //-   //- datatable.addRows([
          //-   //-   ['Mike',  {v: 10000, f: '$10,000'}, true],
          //-   //-   ['Jim',   {v: 8000,  f: '$8,000'},  false],
          //-   //-   ['Alice', {v: 12500, f: '$12,500'}, true],
          //-   //-   ['Bob',   {v: 7000,  f: '$7,000'},  true] 
          //-   //- ]);
          //-   datatable.addRows(rows);
          //-   var table = new google.visualization.Table(document.getElementById('main_table'));
          //-   table.draw(datatable, {showRowNumber: true, width: '100%'});
          //- }
        //- })
        })
        .catch(function (error) {
          console.log(error);
        });
      })
      .catch(function (error) {
        console.log(error);
      });


    function logout(){
      axios.get('/logout')
        .then(response=> {
            window.location.replace ("/");
        })
        .catch(function (error) {
          console.log(error);
        });
    }

    var status;
    var switch_status;
    var acc;
    function switchstatus(index){
      switch_status = document.getElementById("switch"+index);
      acc=document.getElementById("acc"+index).value;
      if(switch_status.checked){
        status=1;
        document.getElementById("labelswitch"+index).innerHTML="Active";
        //- acc=document.getElementById("acc"+index).value;
      }
      else{
        status=0;
        document.getElementById("labelswitch"+index).innerHTML="Inactive";
        
      }
      console.log(acc+"\n"+index);
      axios.post('account/account_status',{
        acc:acc,
        status:status
      })
      .then(response =>{
        console.log(response.status)
      })
      .catch(error =>{
        console.log(error)
      })
      console.log(status);
    }
    function editcategname(index){
      var num;
      var tes = document.getElementById("editselectname"+index).value;
      console.log(index);
      if(tes=='cashicon'){
        num=1;
      }
      else if(tes=='bank'){
        num=2;
      }
      else if(tes=='lend'){
        num=3;
      }
      else if(tes=='cheque'){
        num=4;
      }
      else if(tes=='creditcard'){
        num=5;
      }
      else if(tes=='food'){
        num=6;
      }
      else if(tes=='electric'){
        num=7;
      }
      else if(tes=='truck'){
        num=8;
      }
      else if(tes=='health'){
        num=9;
      }
      else if(tes=='ball'){
        num=10;
      }
      else if(tes=='house'){
        num=11;
      }
      else if(tes=='water'){
        num=12;
      }
      else if(tes=='clothes'){
        num=13;
      }
      else if(tes=='movie'){
        num=14;
      }
      else if(tes=='poker'){
        num=15;
      }
      else if(tes=='car'){
        num=16;
      }
      else if(tes=='accident'){
        num=17;
      }
      else if(tes=='daily'){
        num=18;
      }
      else if(tes=='tax'){
        num=19;
      }
      else if(tes=='pet'){
        num=20;
      }
      else if(tes=='computer'){
        num=21;
      }
      else if(tes=='plane'){
        num=22;
      }
      else if(tes=='gasoline'){
        num=23;
      }
      else if(tes=='garden'){
        num=24;
      }
      else if(tes=='bitcoin'){
        num=25;
      }
      else if(tes=='insurance'){
        num=26;
      }
      else if(tes=='investment'){
        num=27;
      }
      else if(tes=='fixing'){
        num=28;
      }
      else if(tes=='medical'){
        num=29;
      }
      else if(tes=='drink'){
        num=30;
      }
      else{
        num=31;
        tes='add';
        
      }
      if(tes=='0'){
        document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png';
      }
      else{
        console.log(tes)
        document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
      }
    }
    var errornameacc = document.getElementById("errornameacc");
    var erroramount = document.getElementById("erroramount");
    var errorcategory = document.getElementById("errorcategory");
    var errorcurrency = document.getElementById("errorcurrency");
    var errorsharedusername = document.getElementById("errorsharedusername");
    var errorsharednameacc = document.getElementById("errorsharednameacc");

    var categoryname='0';
    function refresh(){
      addbutton=false;
      errornameacc.style.display="none";
      erroramount.style.display="none";
      errorcategory.style.display="none";
      errorcurrency.style.display="none";
      errorsharedusername.style.display="none";
      errorsharednameacc.style.display="none";
      //- addvalidasi();
    }
    function categname(){
      addbutton=false;
      errornameacc.style.display="none";
      erroramount.style.display="none";
      errorcategory.style.display="none";
      errorcurrency.style.display="none";
      var num;
      var tes = document.getElementById("selectname").value;
      categoryname=tes;
      if(tes=='cashicon'){
        num=1;
      }
      else if(tes=='bank'){
        num=2;
      }
      else if(tes=='lend'){
        num=3;
      }
      else if(tes=='cheque'){
        num=4;
      }
      else if(tes=='creditcard'){
        num=5;
      }
      else if(tes=='food'){
        num=6;
      }
      else if(tes=='electric'){
        num=7;
      }
      else if(tes=='truck'){
        num=8;
      }
      else if(tes=='health'){
        num=9;
      }
      else if(tes=='ball'){
        num=10;
      }
      else if(tes=='house'){
        num=11;
      }
      else if(tes=='water'){
        num=12;
      }
      else if(tes=='clothes'){
        num=13;
      }
      else if(tes=='movie'){
        num=14;
      }
      else if(tes=='poker'){
        num=15;
      }
      else if(tes=='car'){
        num=16;
      }
      else if(tes=='accident'){
        num=17;
      }
      else if(tes=='daily'){
        num=18;
      }
      else if(tes=='tax'){
        num=19;
      }
      else if(tes=='pet'){
        num=20;
      }
      else if(tes=='computer'){
        num=21;
      }
      else if(tes=='plane'){
        num=22;
      }
      else if(tes=='gasoline'){
        num=23;
      }
      else if(tes=='garden'){
        num=24;
      }
      else if(tes=='bitcoin'){
        num=25;
      }
      else if(tes=='insurance'){
        num=26;
      }
      else if(tes=='investment'){
        num=27;
      }
      else if(tes=='fixing'){
        num=28;
      }
      else if(tes=='medical'){
        num=29;
      }
      else if(tes=='drink'){
        num=30;
      }
      else if(tes=='0'){
        tes='falses';
      }
      else{
        num=31;
        tes='add';
      }
      document.getElementById("imagename").src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
      //- addvalidasi();
    }

    var addvalid=true;
    var addbutton=false, addsharedbutton=false;
    function addaccount(){
      addbutton=true;
      addvalidasi();
    }

    function addsharedaccount(){
      addsharedbutton=true;
      addsharedvalidasi();
    }

    function addvalidasi(){
      addvalid=true;
      var Nameacc = document.getElementById("nameacc").value;
      var Currency = document.getElementById("currency").value;
      var Amount = document.getElementById("amount").value;

      var category=false;
      var nameacc=false;
      var currency=false;
      var amount=false;
      axios.get('/account/listaccount')
      .then(response=> {
        console.log(categoryname);
        
        if(categoryname=="0"){
          addvalid=false;
          category=true;
          errorcategory.innerHTML="Please input Account Category";
          errorcategory.style.display="inline";
        }
        if(Nameacc==""){
          addvalid=false;
          nameacc=true;
          errornameacc.innerHTML="Please input Account Name";
          errornameacc.style.display="inline";
        }
        if(Currency=="0"){
          addvalid=false;
          currency=true;
          errorcurrency.innerHTML="Please input Account Currency";
          errorcurrency.style.display="inline";
        }
        if(Amount==0 || Amount==""){
          addvalid=false;
          amount=true;
          erroramount.innerHTML="Please input Initial Amount";
          erroramount.style.display="inline";
        }
        
        for(var i=0;i<response.data.dataaccount.length;i++){
          console.log(response.data.dataaccount[i]["account_name"]);
          if(response.data.dataaccount[i]["account_name"]==Nameacc){
            addvalid=false;
            errornameacc.innerHTML="Account Name already exist";
            errornameacc.style.display="inline";
          }
        }
        console.log(addvalid+"\n"+addbutton);
        if(addvalid){
          if(addbutton){
            console.log("Add Account");
            axios.post('/account/authaccount', {
              nameacc: Nameacc,
              currency: Currency,
              ammount: Amount,
              option: categoryname
            })
              .then(response=> {
                window.location.replace ("/account");
                console.log(response.data);
            })
            .catch(function (error) {
              console.log(error);
            });
          }
        }
      })
      .catch(function (error) {
        console.log(error);
      });
    }

    function addsharedvalidasi(){
      addvalid=true;
      var Nameacc = document.getElementById("sharednameacc").value;
      var Username = document.getElementById("sharedusername").value;

      var username=false;
      var nameacc=false;
      axios.get('/account/listaccounts')
      .then(response=> {
        console.log(response.data.dataaccount);
        
        if(Nameacc==""){
          addvalid=false;
          nameacc=true;
          errorsharednameacc.innerHTML="Please input Account Name";
          errorsharednameacc.style.display="inline";
        }
        if(Username=="0"){
          addvalid=false;
          username=true;
          errorsharedusername.innerHTML="Please input Accounts Username/Email";
          errorsharedusername.style.display="inline";
        }
        
        for(var i=0;i<response.data.dataaccount.length;i++){
          console.log(response.data.dataaccount[i]["username"]);
          if(response.data.dataaccount[i]["username"]==Username){
            addvalid=true;
          }
          else if(response.data.dataaccount[i]["email"]==Username){
            addvalid=true;
          }
        }
        if(addvalid){
          if(addsharedbutton){
            console.log("Add Account");
            axios.post('/account/authsharedaccount', {
              nameacc: Nameacc,
              username: Username,
            })
              .then(response=> {
                window.location.replace ("/account");
                console.log(response.data);
            })
            .catch(function (error) {
              console.log(error);
            });
          }
        }
      })
      .catch(function (error) {
        console.log(error);
      });
    }
    //- function selectaccount(){
    //-   //- var select_account = document.getElementById("select_account");
    //-   //- var totalincome=0,totalexpense=0,totaltransfer=0;
    //-   var notransaction=1
    //-   axios.post('/alltransaction',{
    //-     select_duration:document.getElementById('select_duration').value,
    //-     select_account:document.getElementById('select_account').value
    //-   })
    //-   .then(response=> {
        
    //-     // Load the Visualization API and the corechart package.
    //-     google.charts.load('current', {'packages':['corechart']});

    //-     // Set a callback to run when the Google Visualization API is loaded.
    //-     google.charts.setOnLoadCallback(drawChart);

    //-     // Callback that creates and populates a data table,
    //-     // instantiates the pie chart, passes in the data and
    //-     // draws it.
    //-     function drawChart() {
    //-       // Create the data table.
    //-       var data = new google.visualization.DataTable();
    //-       data.addColumn('string', 'Topping');
    //-       data.addColumn('number', 'Slices');
    //-       if(response.data.totalincome==0 && response.data.totalexpense==0 && response.data.totaltransfer==0){
    //-         data.addRows([
    //-           ['No Transaction', notransaction]
    //-         ]);
    //-       }
    //-       else{
    //-         data.addRows([
    //-           ['Income', response.data.totalincome],
    //-           ['Expense', response.data.totalexpense],
    //-           ['Transfer', response.data.totaltransfer]
    //-         ]);
    //-       }

    //-       // Set chart options
    //-       var options = {
    //-         'legend':'bottom',
    //-         'tooltip':{'text':'percentage'},
    //-         'width':600,
    //-         'height':400,
    //-         'pieHole': 0.4,};

    //-       // Instantiate and draw our chart, passing in some options.
    //-       var chart = new google.visualization.PieChart(document.getElementById('main_chart'));
    //-       chart.draw(data, options);
    //-     }
    //-   })
    //-   .catch(function (error) {
    //-     console.log(error);
    //-   });
    //-   for(var i=0;i<dataincome;i++){
    //-     if(select_account.value=="All"){

    //-     }
    //-     if(response.data.dataaccount[i]["account_status"]=="1"){
    //-       rows.push([response.data.dataaccount[i]["account_name"],  response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"], true])
    //-       rowschart.push([response.data.dataaccount[i]["account_name"],  parseInt(response.data.dataaccount[i]["account_balance_current"])])
    //-       console.log(rowschart[i])
    //-     }
    //-     else{
    //-       rows.push([response.data.dataaccount[i]["account_name"],  response.data.dataaccount[i]["account_fullcurrency"].substring(4)+" "+response.data.dataaccount[i]["account_balance_current"], false])
    //-       rowschart.push([response.data.dataaccount[i]["account_name"],  parseInt(response.data.dataaccount[i]["account_balance_current"])])
    //-       console.log(rowschart[i])
    //-     }
    //-   }
    //- }
    
    
    //- // Load the Visualization API and the corechart package.
    //-   google.charts.load('current', {'packages':['corechart']});

    //-   // Set a callback to run when the Google Visualization API is loaded.
    //-   google.charts.setOnLoadCallback(drawChart);

    //-   // Callback that creates and populates a data table,
    //-   // instantiates the pie chart, passes in the data and
    //-   // draws it.
    //-   function drawChart() {

    //-     // Create the data table.
    //-     var data = new google.visualization.DataTable();
    //-     data.addColumn('string', 'Topping');
    //-     data.addColumn('number', 'Slices');
    //-     data.addRows([
    //-       ['Mushrooms', 3],
    //-       ['Onions', 1],
    //-       ['Olives', 1],
    //-       ['Zucchini', 1],
    //-       ['Pepperoni', 2]
    //-     ]);

    //-     // Set chart options
    //-     var options = {'title':'How Much Pizza I Ate Last Night',
    //-                    'width':400,
    //-                    'height':300};

    //-     // Instantiate and draw our chart, passing in some options.
    //-     var chart = new google.visualization.PieChart(document.getElementById('main_chart'));
    //-     chart.draw(data, options);
    //-   }

    //- var myChart = echarts.init(document.getElementById('main_chart'));

    //- var options = {
    //-   labels: ['Apple', 'Mango', 'Orange', 'Watermelon']
    //-   chart: {
    //-     type: 'donut'
    //-   }
    //-   dataLabels: {
    //-     enabled: true,
    //-     formatter: function (val) {
    //-       return val + "%"
    //-     },
    //-   }
    //- }
    //- var option = {
    //-   tooltip: {
    //-       trigger: 'item',
    //-       formatter: "{a} <br/>{b}: {c} ({d}%)"
    //-   },
    //-   legend: {
    //-       orient: 'vertical',
    //-       x: 'left',
    //-       data:['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']
    //-   },
    //-   series: [
    //-     {
    //-       name:'访问来源',
    //-       type:'pie',
    //-       radius: ['50%', '70%'],
    //-       avoidLabelOverlap: false,
    //-       label: {
    //-         normal: {
    //-             show: false,
    //-             position: 'center'
    //-         },
    //-         emphasis: {
    //-             show: true,
    //-             textStyle: {
    //-                 fontSize: '30',
    //-                 fontWeight: 'bold'
    //-             }
    //-         }
    //-       },
    //-       labelLine: {
    //-           normal: {
    //-               show: false
    //-           }
    //-       },
    //-       data:[
    //-           {value:335, name:'直接访问'},
    //-           {value:310, name:'邮件营销'},
    //-           {value:234, name:'联盟广告'},
    //-           {value:135, name:'视频广告'},
    //-           {value:1548, name:'搜索引擎'}
    //-       ]
    //-     }
    //-   ]
    //- };
    //- var chart = new ApexCharts(document.getElementById('main_chart'), options);

    //- chart.render();
    //- myChart.setOption(option);
      
