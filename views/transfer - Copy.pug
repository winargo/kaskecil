doctype html
title Transfer
meta(charset='UTF-8')
meta(name='viewport' content='width=device-width, initial-scale=1')
link(rel='stylesheet' href='https://www.w3schools.com/w3css/4/w3.css')
link(rel='stylesheet' href='https://fonts.googleapis.com/css?family=Raleway')
link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous")

//link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css' integrity='sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4' crossorigin='anonymous')
<!-- Custom styles for this template -->
link(href="css/simple-sidebar.css" rel="stylesheet")
script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js' integrity='sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ' crossorigin='anonymous')
script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js' integrity='sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm' crossorigin='anonymous')
script(src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/js/bootstrap.bundle.min.js")
script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.js')
<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
style.
  html,body,h1,h2,h3,h4,h5 {font-family: "Raleway", sans-serif}
  a:hover{
  text-decoration: none;
  }
  #fixedpost{
  position: fixed;
  float: right;
  border-radius: 50%;
  margin-left: 70%;
  width: 50px;
  height: 50px;
  font-size: 25px;
  }
// Top container
.w3-bar.w3-top.w3-black.w3-large(style='z-index:4;opacity:0.8')
  button.w3-bar-item.w3-button.w3-hide-large.w3-hover-none.w3-hover-text-light-grey(onclick='w3_open();')
    i.fa.fa-bars
    |  &nbsp;Menu
  button.w3-right.w3-btn.btn-primary.w3-padding(onclick='w3_logout()') Logout
  a.w3-bar-item.w3-text-white(href='#')
    | PrimaCash
// Sidebar/menu
nav#mySidebar.w3-sidebar.w3-collapse.w3-white.w3-animate-left(style='z-index:3;width:300px;')
  #wrapper.toggled(style="margin-top:43px;")
    // Sidebar
    #sidebar-wrapper
      ul.sidebar-nav.w3-margin-top
        .w3-container.w3-row
          .w3-col.s4
            img.w3-circle.w3-margin-right(src='https://www.w3schools.com/w3images/avatar2.png' style='width:46px')
          .w3-col.s8.w3-bar.w3-text-white
            span
              | Welcome,
              strong #{username}
            br
            a.w3-bar-item.w3-button(href='#')
              i.fa.fa-envelope
            a.w3-bar-item.w3-button(href='#')
              i.fa.fa-user
            a.w3-bar-item.w3-button(href='#')
              i.fa.fa-cog
        
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/dashboard')
            i.fa.fa-home.fa-fw.w3-left
              | &nbsp; Dashboard
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/income')
            i.fa.fa-arrow-circle-down.fa-fw.w3-left
              | &nbsp; Income 
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/expense')
            i.fa.fa-arrow-circle-up.fa-fw.w3-left
              | &nbsp; Expense
        li
          a.w3-bar-item.w3-button.w3-padding-16.w3-blue(href='#')
            i.fa.fa-exchange-alt.fa-fw.w3-left
              | &nbsp; Transfer
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/account')
            i.fa.fa-users.fa-fw.w3-left
              | &nbsp; Account
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/category')
            i.fa.fa-list-ol.fa-fw.w3-left
              | &nbsp; Category
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='/report')
            i.fa.fa-clipboard-list.fa-fw.w3-left
              | &nbsp; Report
        li
          a.w3-bar-item.w3-button.w3-padding-16(href='chart.html')
            i.fa.fa-chart-bar.fa-fw.w3-left
              | &nbsp; Chart
  //- br
  //- .w3-container.w3-row
  //-   .w3-col.s4
  //-     img.w3-circle.w3-margin-right(src='https://www.w3schools.com/w3images/avatar2.png' style='width:46px')
  //-   .w3-col.s8.w3-bar
  //-     span
  //-       | Welcome,
  //-       strong #{username}
  //-     br
  //-     a.w3-bar-item.w3-button(href='#')
  //-       i.fa.fa-envelope
  //-     a.w3-bar-item.w3-button(href='#')
  //-       i.fa.fa-user
  //-     a.w3-bar-item.w3-button(href='#')
  //-       i.fa.fa-cog
  //- hr
  //- .w3-container
  //-   h5 Dashboard
  //- .w3-bar-block
  //-   a.w3-bar-item.w3-button.w3-padding-16.w3-hide-large.w3-dark-grey.w3-hover-black(href='#' onclick='w3_close()' title='close menu')
  //-     i.fa.fa-remove.fa-fw
  //-     | &nbsp; Close Menu
  //-   a.w3-bar-item.w3-button.w3-padding(href='/home')
  //-     i.fa.fa-home.fa-fw
  //-     | &nbsp; Overview
  //-   a.w3-bar-item.w3-button.w3-padding(href='/income')
  //-     i.fa.fa-users.fa-fw
  //-     | &nbsp; Income
  //-   a.w3-bar-item.w3-button.w3-padding(href='/expense')
  //-     i.fa.fa-bullseye.fa-fw
  //-     | &nbsp; Expenses
  //-   a.w3-bar-item.w3-button.w3-padding.w3-blue(href='#')
  //-     i.fa.fa-exchange.fa-fw
  //-     | &nbsp; Transfer
  //-   a.w3-bar-item.w3-button.w3-padding(href='/account')
  //-     i.fa.fa-diamond.fa-fw
  //-     | &nbsp; Accounts
  //-   a.w3-bar-item.w3-button.w3-padding(href='/category')
  //-     i.fa.fa-bell.fa-fw
  //-     | &nbsp; Category
  //-   a.w3-bar-item.w3-button.w3-padding(href='/report')
  //-     i.fa.fa-bank.fa-fw
  //-     | &nbsp; Report
  //-   a.w3-bar-item.w3-button.w3-padding(href='chart.html')
  //-     i.fa.fa-history.fa-fw
  //-     | &nbsp; Charts
  //-   br
  //-   br
// Overlay effect when opening sidebar on small screens
#myOverlay.w3-overlay.w3-hide-large.w3-animate-opacity(onclick='w3_close()' style='cursor:pointer' title='close side menu')
// !PAGE CONTENT!
-function prettyDate(dateString){
    //if it's already a date object and not a string you don't need this line:
    -var date = new Date(dateString);
    -var d = date.getDate();
    -var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
    -var m = monthNames[date.getMonth()];
    -var y = date.getFullYear();
    -return d+' '+m+' '+y;}
.w3-main(style='margin-left:300px;margin-top:43px;')
  // Header
  header.w3-container(style='padding-top:22px')
    h5
      b
        i.fa.fa-dashboard
        |  My Transfer
    // Button trigger modal
    button.btn.btn-outline-dark(data-toggle='modal' data-target='#Transfer')
      i.fa.fa-plus-circle.fw-fa
      |  Add Transfer
    // Modal
    #Transfer.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
      .modal-dialog.modal-dialog-centered(role='document')
        .modal-content
          .modal-header
            h5#exampleModalLongTitle.modal-title Transfer
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') &times;
          form(action='/authtransfer' method='post')
            .modal-body
              .row
                .col-md-8
                  .form-group
                    label(for='first') From Account
                    select#src.custom-select(name='src' onchange='selectsrc()')
                      option(value='0' selected='') Select
                      each b in list1
                          option(value=''+[b.account_name]) #{b.account_name}
                    strong#errorfrom(style="color:red;display:none") Error
                  .form-group
                    label(for='first' style='margin-top:10px') To Account
                    select#dest.custom-select(name='dest' onchange='selectdest()')
                      option(value='0' selected='') Select
                      each b in list1
                          option(value=''+[b.account_name]) #{b.account_name}
                    strong#errorto(style="color:red;display:none") Error
                  label(for='3' style='margin-top:10px') Transfer Category
                    .select
                      img#imagename(style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png') 
                        
                      select#selectname.custom-select(style='width:268px;display:inline-block' onchange='categname()' name='category' title="Select your category")
                          option(value='0' selected='') Select
                          each resu in listcategory
                              option(value=''+[resu.category_name]) #{resu.category_name}
                  strong#errorcategory(style="color:red;display:none") Error
                  .form-group
                    label(for='second') Amount
                    input#amount.form-control(type='number' name='amount' oninput='refresh()')
                    strong#erroramount(style="color:red;display:none") Error
                  .form-group
                    label(for='second') Transfer Rate
                    input#trate.form-control(type='number' name='trate' oninput='refresh()')
                    strong#errorrate(style="color:red;display:none") Error
                  .form-group
                    label(for='4') Transfer Date
                    input#inptdate.form-control(type='date' name='inptdate' oninput='refresh()')
                    strong#errordate(style="color:red;display:none") Error
                  label(for='note') Note
                  input#note.form-control(type='text' name='note' oninput='refresh()')
                  strong#errornote(style="color:red;display:none") Error
                .col-md-4
                  .form-group
                    label From Currency
                    input#fromcur.form-control(type='text' name='fromcur' disabled)
                  .form-group
                    label(style='margin-top:10px') Currency
                    input#tocur.form-control(type='text' name='tocur' disabled)
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Close
              button.btn.btn-primary(type='button' onclick='addtransfer()') Add
  hr
  .w3-panel
    .w3-row-padding(style='margin:0 -16px')
      .row
        each a, index in list
          .col-md-3
            .card.text-white.bg-secondary.mb-3(style='max-width: 18rem;')
              .card-header #{a.transfer_date}
              .card-body
                h5.card-title #{a.transfer_account}
                // Delete Button
                button.btn.btn-outline-light(style='float:right' data-toggle='modal' data-target='#Delete'+a.transfer_id)
                  i.fa.fa-trash.fa-fw
                // Modal
                div.modal.fade(id='Delete'+a.transfer_id tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                  .modal-dialog.modal-dialog-centered(role='document')
                    .modal-content
                      .modal-header
                        h5#exampleModalLongTitle.modal-title(style="color:black") Delete Transfer
                        button.close(type='button' data-dismiss='modal' aria-label='Close')
                          span(aria-hidden='true') &times;
                      form(action='/deletetransfer' method='post')
                        .modal-body
                          .row
                            .col-md-12
                              //label(for='1') Name Category
                              //input#first.form-control(type='text' name='namecate')
                              p(style="color:black") Are you sure to delete your transfer from #{a.transfer_src} to #{a.transfer_dest} ?
                              //input#deletecatnums.form-control(type='hidden' name='deletecategnums' value=''+[r.category_image])
                              input(type='hidden' name='transferid' value=''+a.transfer_id)
                              input(type='hidden' name='transfers' value=''+a.transfer_src)
                              input(type='hidden' name='transferd' value=''+a.transfer_dest)
                        .modal-footer
                          button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
                          button.btn.btn-primary(type='submit') Delete
                
                // Button trigger modal
                button.btn.btn-outline-light(style='float:right;margin-right:10px;' data-toggle='modal' data-target='#'+a.transfer_id)
                  i.fa.fa-edit.fa-fw
                // Modal
                div.modal.fade(id=a.transfer_id tabindex='-1' role='dialog' style="color:black" aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                  .modal-dialog.modal-dialog-centered(role='document')
                    .modal-content
                      .modal-header
                        h5#exampleModalLongTitle.modal-title Transfer
                        button.close(type='button' data-dismiss='modal' aria-label='Close')
                          span(aria-hidden='true') &times;
                      //- form(action='/edittransfer' method='post')
                      form
                        .modal-body
                          .row
                            .col-md-8
                              .form-group
                                label(for='first') From Account
                                select.custom-select(id='src'+index name='src' onchange='editselectsrc('+index+')')
                                  if(a.transfer_src==null)
                                    option(value='0' selected='') Select
                                    each b in list1
                                      if(a.transfer_dest!=[b.account_name])
                                        option(value=''+b.account_name) #{b.account_name}
                                  else
                                    option(value=a.transfer_src selected='') #{a.transfer_src}
                                    option(value='0') Select
                                    each b in list1
                                      if(a.transfer_src==[b.account_name] || a.transfer_dest==[b.account_name])
                                      else
                                        option(value=''+b.account_name) #{b.account_name}
                                strong(id="errorfrom"+index style="color:red;display:none") Error
                              .form-group
                                label(for='first' style='margin-top:10px') To Account
                                select.custom-select(id='dest'+index name='dest' onchange='editselectdest('+index+')')
                                  if(a.transfer_dest==null)
                                    option(value='0' selected='') Select
                                    each b in list1
                                      if(a.transfer_src!=[b.account_name])
                                        option(value=''+b.account_name) #{b.account_name}
                                  else
                                    option(value=a.transfer_dest selected='') #{a.transfer_dest}
                                    option(value='0') Select
                                    each b in list1
                                      if(a.transfer_src==[b.account_name] || a.transfer_dest==[b.account_name])
                                      else
                                        option(value=''+b.account_name) #{b.account_name}
                                strong(id="errorto"+index style="color:red;display:none") Error

                              label(for='3' style='margin-top:10px') Transfer Category
                                .select
                                  //- img#imagename(style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png') 
                                  each y in listcategory
                                    if(a.transfer_category==[y.category_name])
                                      if(y.category_image==31)
                                        img(id='editimagename'+index style='margin-right:10px;width:36px;height:36px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/add.png')
                                      else
                                        img(id='editimagename'+index style='margin-right:10px;width:36px;height:36px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+a.transfer_category+'.png')

                                  select.custom-select(id='editselectname'+index style='width:256px;display:inline-block' onchange='editcategname('+index+')' name='category' title="Select your category")
                                    if(a.transfer_category==null) 
                                      option(value='0' selected='') Select
                                      each resu in listcategory
                                        option(value=''+resu.category_name) #{resu.category_name}
                                    else
                                      option(value=''+a.transfer_category selected) #{a.transfer_category}
                                      each resu in listcategory
                                        if(a.transfer_category!=[resu.category_name])
                                          option(value=resu.category_name) #{resu.category_name}
                                      //- option(value='0' selected='') Select
                                      //- each resu in listcategory
                                      //-     option(value=''+[resu.category_name]) #{resu.category_name}
                              strong(id="errorcategory"+index style="color:red;display:none") Error
                              
                              .form-group
                                label(for='second') Amount
                                input.form-control(id="amount"+index type='number' name='amount' oninput='editrefresh('+index+')' value=a.transfer_amount)
                                strong(id="erroramount"+index style="color:red;display:none") Error
                              .form-group
                                label(for='second') Transfer Rate
                                input.form-control(id="tfrate"+index type='number' name='trate' oninput='editrefresh('+index+')' value=a.transfer_rate)
                                strong(id="errorrate"+index style="color:red;display:none") Error
                              .form-group
                                label(for='4') Transfer Date
                                each x in inputdate
                                  if(a.transfer_id==[x.transfer_id])
                                    input.transferdate.form-control(id="inptdate"+index type='text' name='editinptdate' oninput='editrefresh('+index+')' value=x.transfer_date)
                                
                                strong(id="errordate"+index style="color:red;display:none") Error
                              label(for='note') Note
                              input.form-control(id="note"+index type='text' name='note' oninput='editrefresh('+index+')' value=a.transfer_notes)
                              strong(id="errornote"+index style="color:red;display:none") Error
                            .col-md-4
                              .form-group
                                label From Currency 
                                each y in list1
                                  if(a.transfer_src==[y.account_name])
                                    input.form-control(id='fromcur'+index type='text' name='fromcur' value=y.account_currency disabled)
                                //- input#fromcur.form-control(type='text' name='fromcur' disabled)
                              .form-group
                                label(style='margin-top:10px') Currency
                                each y in list1
                                  if(a.transfer_dest==[y.account_name])
                                    input.form-control(id='tocur'+index type='text' name='tocur' value=y.account_currency disabled)
                                //- input#tocur.form-control(type='text' name='tocur' disabled)
                        .modal-footer
                          input.form-control(style="display:none" id=index type='text' name='test' value=a.transfer_id)
                          button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                          button.btn.btn-primary(type='button' onclick='edittransfer('+index+')') Edit
                          //- if(a.transfer_id!=null)
                            
                          //- else

                p.card-text
                  | #{symbol} #{a.transfer_amount}
                  br
                  | From : #{a.transfer_src}
                  br
                  | To : #{a.transfer_dest}

  br
  // Footer
  //
    <footer class="w3-container w3-padding-16 w3-light-grey">
    <h4>FOOTER</h4>
    </footer>
  // End page content
script(src="./js/axios.min.js")
script(type='text/javascript' src='https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js')
script.
  // Get the Sidebar
  var mySidebar = document.getElementById("mySidebar");
  // Get the DIV with overlay effect
  var overlayBg = document.getElementById("myOverlay");
  // Toggle between showing and hiding the sidebar, and add overlay effect
  function w3_open() {
  if (mySidebar.style.display === 'block') {
  mySidebar.style.display = 'none';
  overlayBg.style.display = "none";
  } else {
  mySidebar.style.display = 'block';
  overlayBg.style.display = "block";
  }
  }

  $(function() {
    $('.transferdate').daterangepicker({
      singleDatePicker: true,
      showDropdowns: true
    }, function(start, end, label) {
      console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
    });
  });

  function editcategname(index){
    var num;
    var tes = document.getElementById("editselectname"+index).value;
    console.log(tes);
    if(tes=='cashicon'){
      num=1;
    }
    else if(tes=='bank'){
      num=2;
    }
    else if(tes=='lend'){
      num=3;
    }
    else if(tes=='cheque'){
      num=4;
    }
    else if(tes=='creditcard'){
      num=5;
    }
    else if(tes=='food'){
      num=6;
    }
    else if(tes=='electric'){
      num=7;
    }
    else if(tes=='truck'){
      num=8;
    }
    else if(tes=='health'){
      num=9;
    }
    else if(tes=='ball'){
      num=10;
    }
    else if(tes=='house'){
      num=11;
    }
    else if(tes=='water'){
      num=12;
    }
    else if(tes=='clothes'){
      num=13;
    }
    else if(tes=='movie'){
      num=14;
    }
    else if(tes=='poker'){
      num=15;
    }
    else if(tes=='car'){
      num=16;
    }
    else if(tes=='accident'){
      num=17;
    }
    else if(tes=='daily'){
      num=18;
    }
    else if(tes=='tax'){
      num=19;
    }
    else if(tes=='pet'){
      num=20;
    }
    else if(tes=='computer'){
      num=21;
    }
    else if(tes=='plane'){
      num=22;
    }
    else if(tes=='gasoline'){
      num=23;
    }
    else if(tes=='garden'){
      num=24;
    }
    else if(tes=='bitcoin'){
      num=25;
    }
    else if(tes=='insurance'){
      num=26;
    }
    else if(tes=='investment'){
      num=27;
    }
    else if(tes=='fixing'){
      num=28;
    }
    else if(tes=='medical'){
      num=29;
    }
    else if(tes=='drink'){
      num=30;
    }
    else{
      num=31;
      tes='add';
      
    }
    if(tes=='0'){
      document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png';
    }
    else{
      console.log(tes)
      document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
    }
  }

  var errorfrom = document.getElementById("errorfrom");
  var errorto = document.getElementById("errorto");
  var errorcategory = document.getElementById("errorcategory");
  var erroramount = document.getElementById("erroramount");
  var errorrate = document.getElementById("errorrate");
  var errordate = document.getElementById("errordate");
  var errornote = document.getElementById("errornote");

  var Src;
  var Dest;
  var Amount;
  var InputDate;
  var Rate;
  var Note;
  var fromcur,tocur;

  function refresh(){
    addbutton=false;
    errorfrom.style.display="none";
    errorto.style.display="none";
    errorcategory.style.display="none";
    erroramount.style.display="none";
    errorrate.style.display="none";
    errordate.style.display="none";
    errornote.style.display="none";

  }

  function editrefresh(index){
    var editerrorfrom = document.getElementById("errorfrom"+index);
    var editerrorto = document.getElementById("errorto"+index);
    var editerrorcategory = document.getElementById("errorcategory"+index);
    var editerroramount = document.getElementById("erroramount"+index);
    var editerrorrate = document.getElementById("errorrate"+index);
    var editerrordate = document.getElementById("errordate"+index);
    var editerrornote = document.getElementById("errornote"+index);
    editbutton=false;
    editerrorfrom.style.display="none";
    editerrorto.style.display="none";
    editerrorcategory.style.display="none";
    editerroramount.style.display="none";
    editerrorrate.style.display="none";
    editerrordate.style.display="none";
    editerrornote.style.display="none";

  }

  function selectsrc(){
    Src= document.getElementById("src").value;
    Dest= document.getElementById("dest").value;
    fromcur= document.getElementById("fromcur");
    var Srcs=document.getElementById("src")
    var Dests=document.getElementById("dest")
    
    for(var option in Dests){
        Dests.remove(option);
      }
    if(Dest=='0'){
      if(Src!='0'){
        addbutton=false;
        errorfrom.style.display="none";
        errorto.style.display="none";
        errorcategory.style.display="none";
        erroramount.style.display="none";
        errorrate.style.display="none";
        errordate.style.display="none";
        errornote.style.display="none";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Src){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
              else{
                fromcur.value=response.data.dataaccount[i]["account_currency"];
                console.log(fromcur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });
      }
      else{
        fromcur.value="";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Dests.add(option,null);
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }
    else{
      addbutton=false;
      errorfrom.style.display="none";
      errorto.style.display="none";
      errorcategory.style.display="none";
      erroramount.style.display="none";
      errorrate.style.display="none";
      errordate.style.display="none";
      errornote.style.display="none";
      axios.get('/listaccount')
        .then(response=> {
          var option = document.createElement("option");
          option.text=Dest;
          option.value=Dest;
          Dests.add(option,null);
          Dests.selected;
          var option = document.createElement("option");
          option.text="Select";
          option.value="0";
          Dests.add(option,null);
          for(var i=0;i<response.data.dataaccount.length;i++){
            if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Dests.add(option,null);
            }
            else if(response.data.dataaccount[i]["account_name"]!=Dest){
              fromcur.value=response.data.dataaccount[i]["account_currency"];
              console.log(fromcur.value)
            }
          }
          
        })
        .catch(function (error) {
          console.log(error);
        });
    }
  }

  function selectdest(){
    Dest= document.getElementById("dest").value;
    Src= document.getElementById("src").value;
    tocur= document.getElementById("tocur");
    var Srcs=document.getElementById("src")
    var Dests=document.getElementById("dest")
    
    for(var option in Srcs){
      Srcs.remove(option);
    }
    if(Src=='0'){
      
      
      if(Dest!='0'){

        addbutton=false;
        errorfrom.style.display="none";
        errorto.style.display="none";
        errorcategory.style.display="none";
        erroramount.style.display="none";
        errorrate.style.display="none";
        errordate.style.display="none";
        errornote.style.display="none";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
              else{
                tocur.value=response.data.dataaccount[i]["account_currency"];
                console.log(tocur.value)
              }
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
      else{
        tocur.value="";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Srcs.add(option,null);
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }
    else{
      addbutton=false;
      errorfrom.style.display="none";
      errorto.style.display="none";
      errorcategory.style.display="none";
      erroramount.style.display="none";
      errorrate.style.display="none";
      errordate.style.display="none";
      errornote.style.display="none";
      axios.get('/listaccount')
        .then(response=> {
          var option = document.createElement("option");
          option.text=Src;
          option.value=Src;
          Srcs.add(option,null);
          Srcs.selected;
          var option = document.createElement("option");
          option.text="Select";
          option.value="0";
          Srcs.add(option,null);
          console.log(Src)
          var pos=0;
          for(var i=0;i<response.data.dataaccount.length;i++){
            if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
              console.log(response.data.dataaccount[i]["account_name"])
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Srcs.add(option,null);
            }
            
            else if(response.data.dataaccount[i]["account_name"]==Dest){    
              tocur.value=response.data.dataaccount[i]["account_currency"];
              console.log(tocur.value)
            }
          }
          
        })
        .catch(function (error) {
          console.log(error);
        });

    }
  }

  function editselectsrc(x){
    Src= document.getElementById("src"+x).value;
    Dest= document.getElementById("dest"+x).value;
    fromcur= document.getElementById("fromcur"+x);
    var Srcs=document.getElementById("src"+x)
    var Dests=document.getElementById("dest"+x)

    var editerrorfrom = document.getElementById("errorfrom"+x);
    var editerrorto = document.getElementById("errorto"+x);
    var editerrorcategory = document.getElementById("errorcategory"+x);
    var editerroramount = document.getElementById("erroramount"+x);
    var editerrorrate = document.getElementById("errorrate"+x);
    var editerrordate = document.getElementById("errordate"+x);
    var editerrornote = document.getElementById("errornote"+x);
    editbutton=false;
    editerrorfrom.style.display="none";
    editerrorto.style.display="none";
    editerrorcategory.style.display="none";
    editerroramount.style.display="none";
    editerrorrate.style.display="none";
    editerrordate.style.display="none";
    editerrornote.style.display="none";

    for(var option in Dests){
        Dests.remove(option);
      }
    if(Dest=='0'){
      //- if(Src!='0'){
      if(Src!='0') {
        //- addbutton=false;
        //- errorfrom.style.display="none";
        //- errorto.style.display="none";
        //- errorcategory.style.display="none";
        //- erroramount.style.display="none";
        //- errorrate.style.display="none";
        //- errordate.style.display="none";
        //- errornote.style.display="none";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Src){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
              else{
                fromcur.value=response.data.dataaccount[i]["account_currency"];
                console.log(fromcur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });
      }
      else{
        fromcur.value="";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Dests.add(option,null);
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }
    else{
      //- addbutton=false;
      //- errorfrom.style.display="none";
      //- errorto.style.display="none";
      //- errorcategory.style.display="none";
      //- erroramount.style.display="none";
      //- errorrate.style.display="none";
      //- errordate.style.display="none";
      //- errornote.style.display="none";
      axios.get('/listaccount')
        .then(response=> {
          var option = document.createElement("option");
          option.text=Dest;
          option.value=Dest;
          Dests.add(option,null);
          Dests.selected;
          var option = document.createElement("option");
          option.text="Select";
          option.value="0";
          Dests.add(option,null);
          for(var i=0;i<response.data.dataaccount.length;i++){
            if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Dests.add(option,null);
            }
            else if(response.data.dataaccount[i]["account_name"]!=Dest){
              fromcur.value=response.data.dataaccount[i]["account_currency"];
              console.log(fromcur.value)
            }
          }
          
        })
        .catch(function (error) {
          console.log(error);
        });
    }
  }

  function editselectdest(x){
    Dest= document.getElementById("dest"+x).value;
    Src= document.getElementById("src"+x).value;
    tocur= document.getElementById("tocur"+x);
    var Srcs=document.getElementById("src"+x)
    var Dests=document.getElementById("dest"+x)

    var editerrorfrom = document.getElementById("errorfrom"+x);
    var editerrorto = document.getElementById("errorto"+x);
    var editerrorcategory = document.getElementById("errorcategory"+x);
    var editerroramount = document.getElementById("erroramount"+x);
    var editerrorrate = document.getElementById("errorrate"+x);
    var editerrordate = document.getElementById("errordate"+x);
    var editerrornote = document.getElementById("errornote"+x);
    editbutton=false;
    editerrorfrom.style.display="none";
    editerrorto.style.display="none";
    editerrorcategory.style.display="none";
    editerroramount.style.display="none";
    editerrorrate.style.display="none";
    editerrordate.style.display="none";
    editerrornote.style.display="none";

    for(var option in Srcs){
      Srcs.remove(option);
    }
    if(Src=='0'){
      if(Dest!='0'){
        //- addbutton=false;
        //- errorfrom.style.display="none";
        //- errorto.style.display="none";
        //- errorcategory.style.display="none";
        //- erroramount.style.display="none";
        //- errorrate.style.display="none";
        //- errordate.style.display="none";
        //- errornote.style.display="none";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
              else{
                tocur.value=response.data.dataaccount[i]["account_currency"];
                console.log(tocur.value)
              }
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
      else{
        tocur.value="";
        axios.get('/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Srcs.add(option,null);
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }
    else{
      //- addbutton=false;
      //- errorfrom.style.display="none";
      //- errorto.style.display="none";
      //- errorcategory.style.display="none";
      //- erroramount.style.display="none";
      //- errorrate.style.display="none";
      //- errordate.style.display="none";
      //- errornote.style.display="none";
      axios.get('/listaccount')
        .then(response=> {
          var option = document.createElement("option");
          option.text=Src;
          option.value=Src;
          Srcs.add(option,null);
          Srcs.selected;
          var option = document.createElement("option");
          option.text="Select";
          option.value="0";
          Srcs.add(option,null);
          console.log(Src)
          var pos=0;
          for(var i=0;i<response.data.dataaccount.length;i++){
            if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
              console.log(response.data.dataaccount[i]["account_name"])
              var option = document.createElement("option");
              option.text=response.data.dataaccount[i]["account_name"];
              option.value=response.data.dataaccount[i]["account_name"];
              Srcs.add(option,null);
            }
            
            else if(response.data.dataaccount[i]["account_name"]==Dest){    
              tocur.value=response.data.dataaccount[i]["account_currency"];
              console.log(tocur.value)
            }
          }
          
        })
        .catch(function (error) {
          console.log(error);
        });

    }
  }

  var categoryname;
  function categname(){
    addbutton=false;
    errorfrom.style.display="none";
    errorto.style.display="none";
    errorcategory.style.display="none";
    erroramount.style.display="none";
    errorrate.style.display="none";
    errordate.style.display="none";
    errornote.style.display="none";
    var num;
    var tes = document.getElementById("selectname").value;
    categoryname=tes;
    if(tes=='cashicon'){
      num=1;
    }
    else if(tes=='bank'){
      num=2;
    }
    else if(tes=='lend'){
      num=3;
    }
    else if(tes=='cheque'){
      num=4;
    }
    else if(tes=='creditcard'){
      num=5;
    }
    else if(tes=='food'){
      num=6;
    }
    else if(tes=='electric'){
      num=7;
    }
    else if(tes=='truck'){
      num=8;
    }
    else if(tes=='health'){
      num=9;
    }
    else if(tes=='ball'){
      num=10;
    }
    else if(tes=='house'){
      num=11;
    }
    else if(tes=='water'){
      num=12;
    }
    else if(tes=='clothes'){
      num=13;
    }
    else if(tes=='movie'){
      num=14;
    }
    else if(tes=='poker'){
      num=15;
    }
    else if(tes=='car'){
      num=16;
    }
    else if(tes=='accident'){
      num=17;
    }
    else if(tes=='daily'){
      num=18;
    }
    else if(tes=='tax'){
      num=19;
    }
    else if(tes=='pet'){
      num=20;
    }
    else if(tes=='computer'){
      num=21;
    }
    else if(tes=='plane'){
      num=22;
    }
    else if(tes=='gasoline'){
      num=23;
    }
    else if(tes=='garden'){
      num=24;
    }
    else if(tes=='bitcoin'){
      num=25;
    }
    else if(tes=='insurance'){
      num=26;
    }
    else if(tes=='investment'){
      num=27;
    }
    else if(tes=='fixing'){
      num=28;
    }
    else if(tes=='medical'){
      num=29;
    }
    else if(tes=='drink'){
      num=30;
    }
    else if(tes=='0'){
      tes='falses';
    }
    else{
      num=31;
      tes='add';
    }
    document.getElementById("imagename").src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
    
  }
  // Close the sidebar with the close button
  function w3_close() {
  mySidebar.style.display = "none";
  overlayBg.style.display = "none";
  }

  var addvalid=true, editvalid=true;
  var addbutton=false, editbutton=false;
  function addtransfer(){
    addbutton=true;
    addvalidasi();
  }

  function edittransfer(index){
    var id=document.getElementById(index).value;
    console.log("Masuk")
    console.log(id)
    editbutton=true;
    editvalidasi(index);
  }

  function addvalidasi(){
    addvalid=true;
    
    var src=false;
    var dest=false;
    var category=false;
    var amount=false;
    var rate=false;
    var inputdate=false;
    var note=false;

    Amount = document.getElementById("amount").value;
    InputDate = document.getElementById("inptdate").value;
    Note = document.getElementById("note").value;
    Rate = document.getElementById("trate").value;
    categoryname=document.getElementById("selectname").value;
    Src=document.getElementById("src").value;
    Dest=document.getElementById("dest").value;
    console.log(categoryname);
    if(Src=="0"){
      addvalid=false;
      src=true;
      errorfrom.innerHTML="Please input Account From";
      errorfrom.style.display="inline";
    }
    if(Dest=="0"){
      addvalid=false;
      dest=true;
      errorto.innerHTML="Please input Account To";
      errorto.style.display="inline";
    }
    if(categoryname=="0"){
      addvalid=false;
      category=true;
      errorcategory.innerHTML="Please input Transfer Category";
      errorcategory.style.display="inline";
    }
    if(Rate=="" || Rate=="0"){
      addvalid=false;
      rate=true;
      errorrate.innerHTML="Please input Transfer Rate";
      errorrate.style.display="inline";
    }
    if(InputDate==""){
      addvalid=false;
      inputdate=true;
      errordate.innerHTML="Please input Transfer Date";
      errordate.style.display="inline";
    }
    if(Note==""){
      addvalid=false;
      note=true;
      errornote.innerHTML="Please input Transfer Note";
      errornote.style.display="inline";
    }
    if(Amount==0 || Amount==""){
      addvalid=false;
      amount=true;
      erroramount.innerHTML="Please input Initial Amount";
      erroramount.style.display="inline";
    }
    if(Src!='0'){
      axios.post('/currentbalance', {
        nameacc: Src
      })
      .then(response=> {
        if(parseInt(Amount)>=parseInt(response.data.balance)){
          addvalid=false;
          amount=true;
          erroramount.innerHTML="Your Amount must lower than "+response.data.currency+response.data.balance;
          erroramount.style.display="inline";
        }

        console.log(addvalid+"\n"+addbutton);
        if(addvalid){
          if(addbutton){
            console.log("Add Transfer");
            axios.post('/authtransfer', {
              src: Src,
              dest: Dest,
              category: categoryname,
              amount: Amount,
              inptdate: InputDate,
              note: Note
            })
              .then(response=> {
                window.location.replace ("/transfer");
                console.log(response.data);
            })
            .catch(function (error) {
              console.log(error);
            });
          }
        }
      })
      .catch(function (error) {
        console.log(error);
      });
    }
  }

  function editvalidasi(index){
    editvalid=true;
    
    var src=false;
    var dest=false;
    var category=false;
    var amount=false;
    var rate=false;
    var inputdate=false;
    var note=false;

    Amount = document.getElementById("amount"+index).value;
    InputDate = document.getElementById("inptdate"+index).value;
    Note = document.getElementById("note"+index).value;
    Rate = document.getElementById("tfrate"+index).value;
    categoryname=document.getElementById("editselectname"+index).value;
    Src=document.getElementById("src"+index).value;
    Dest=document.getElementById("dest"+index).value;

    var editerrorfrom = document.getElementById("errorfrom"+index);
    var editerrorto = document.getElementById("errorto"+index);
    var editerrorcategory = document.getElementById("errorcategory"+index);
    var editerroramount = document.getElementById("erroramount"+index);
    var editerrorrate = document.getElementById("errorrate"+index);
    var editerrordate = document.getElementById("errordate"+index);
    var editerrornote = document.getElementById("errornote"+index);
    console.log(categoryname);
    if(Src=="0"){
      editvalid=false;
      src=true;
      editerrorfrom.innerHTML="Please input Account From";
      editerrorfrom.style.display="inline";
    }
    if(Dest=="0"){
      editvalid=false;
      dest=true;
      editerrorto.innerHTML="Please input Account To";
      editerrorto.style.display="inline";
    }
    if(categoryname=="0"){
      editvalid=false;
      category=true;
      editerrorcategory.innerHTML="Please input Transfer Category";
      editerrorcategory.style.display="inline";
    }
    if(Rate=="" || Rate=="0"){
      editvalid=false;
      rate=true;
      editerrorrate.innerHTML="Please input Transfer Rate";
      editerrorrate.style.display="inline";
    }
    if(InputDate==""){
      editvalid=false;
      inputdate=true;
      editerrordate.innerHTML="Please input Transfer Date";
      editerrordate.style.display="inline";
    }
    if(Note==""){
      editvalid=false;
      note=true;
      editerrornote.innerHTML="Please input Transfer Note";
      editerrornote.style.display="inline";
    }
    if(Amount==0 || Amount==""){
      editvalid=false;
      amount=true;
      editerroramount.innerHTML="Please input Initial Amount";
      editerroramount.style.display="inline";
    }
    if(Src!='0'){
      axios.post('/currentbalance', {
        nameacc: Src
      })
      .then(response=> {
        if(parseInt(Amount)>=parseInt(response.data.balance)){
          editvalid=false;
          amount=true;
          editerroramount.innerHTML="Your Amount must lower than "+response.data.currency+response.data.balance;
          editerroramount.style.display="inline";
        }

        console.log(editvalid+"\n"+editbutton);
        if(editvalid){
          if(editbutton){
            console.log("Edit Transfer");
            //- axios.post('/authtransfer', {
            //-   src: Src,
            //-   dest: Dest,
            //-   category: categoryname,
            //-   amount: Amount,
            //-   inptdate: InputDate,
            //-   note: Note
            //- })
            //-   .then(response=> {
            //-     window.location.replace ("/transfer");
            //-     console.log(response.data);
            //- })
            //- .catch(function (error) {
            //-   console.log(error);
            //- });
          }
        }
      })
      .catch(function (error) {
        console.log(error);
      });
    }
  }

  function w3_logout(){
  window.location.replace('/');
  }
