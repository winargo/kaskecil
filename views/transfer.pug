doctype html
head
  meta(http-equiv='Content-Type' content='text/html; charset=UTF-8')
  // Meta, title, CSS, favicons, etc.
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  title Transfer
  link(href='https://cdn.datatables.net/1.10.19/css/dataTables.material.min.css' rel='stylesheet')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/material-design-lite/1.1.0/material.min.css' rel='stylesheet')
  //- link(href='https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css' rel='stylesheet')
  //- link(href='https://cdn.datatables.net/1.10.19/css/dataTables.semanticui.min.css' rel='stylesheet')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css' rel='stylesheet')
  link(href='https://cdn.datatables.net/buttons/1.5.6/css/buttons.semanticui.min.css' rel='stylesheet')

  // Bootstrap
  link(rel='stylesheet' href='../vendors/bootstrap/dist/css/bootstrap.min.css')
  
  // Font Awesome
  link(rel='stylesheet' href='../vendors/font-awesome/css/font-awesome.min.css' )
  // NProgress
  link(href='../vendors/nprogress/nprogress.css' rel='stylesheet')
  // bootstrap-daterangepicker
  link(href='../vendors/bootstrap-daterangepicker/daterangepicker.css' rel='stylesheet')
  // Custom Theme Style
  link(href='../build/css/custom.min.css' rel='stylesheet')
  
  //- script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
  //- script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy' crossorigin='anonymous')

  // jQuery
  script(type="text/javascript" src='../vendors/jquery/dist/jquery.min.js')
  // Bootstrap
  script(type="text/javascript" src='../vendors/bootstrap/dist/js/bootstrap.min.js')

  //- <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
  //- <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
  script(src="https://www.gstatic.com/charts/loader.js")

body.nav-md
  .container.body
    .main_container
      .col-md-3.left_col
        .left_col.scroll-view
          .navbar.nav_title(style='border: 0;')
            a.site_title.d-flex.p-3.bg-secondary(href='index.html')
              img.img-circle(src='images/logo.jpg')
              span &nbsp;Prima Cash
          .clearfix
          // menu profile quick info
          .profile.clearfix
            .profile_pic
              img.img-circle.profile_img(src='images/img.jpg' alt='...')
            .profile_info
              span Welcome,
              h2 #{username}
          // /menu profile quick info
          br
          // sidebar menu
          #sidebar-menu.main_menu_side.hidden-print.main_menu
            .menu_section
              h3 General
              ul.nav.side-menu
                li
                  a(href='/dashboard')
                    i.fa.fa-home
                    |  Home 
                li
                  a(href='/account')
                    i.fa.fa-users
                    |  Account 
                li
                  a(href='/category')
                    i.fa.fa-list-ol
                    |  Category 
                li
                  a
                    i.fa.fa-money
                    |  Transaction 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='/income') Income
                    li
                      a(href='/expense') Expense
                    li.active
                      a Transfer
                li
                  a
                    i.fa.fa-clipboard
                    |  Report
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='/report/ac') Account&amp;Category Report
                    li
                      a(href='/report/cob') Chart Of Balance
                    li
                      a(href='media_gallery.html') Expense Report
                    li
                      a(href='typography.html') Transfer Report
                li
                  a
                    i.fa.fa-bar-chart-o
                    |  Charts 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='general_elements.html') Income Chart
                    li
                      a(href='media_gallery.html') Expense Chart
                    li
                      a(href='typography.html') Transfer Chart
                    li
                      a(href='chart.html') All Chart
            .menu_section
              h3 Live On
              ul.nav.side-menu
                li
                  a
                    i.fa.fa-bug
                    |  Additional Pages 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='e_commerce.html') E-commerce
                    li
                      a(href='projects.html') Projects
                    li
                      a(href='project_detail.html') Project Detail
                    li
                      a(href='contacts.html') Contacts
                    li
                      a(href='profile.html') Profile
                li
                  a
                    i.fa.fa-windows
                    |  Extras 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='page_403.html') 403 Error
                    li
                      a(href='page_404.html') 404 Error
                    li
                      a(href='page_500.html') 500 Error
                    li
                      a(href='plain_page.html') Plain Page
                    li
                      a(href='login.html') Login Page
                    li
                      a(href='pricing_tables.html') Pricing Tables
                li
                  a
                    i.fa.fa-sitemap
                    |  Multilevel Menu 
                    span.fa.fa-chevron-down
                  ul.nav.child_menu
                    li
                      a(href='#level1_1') Level One
                    li
                      a
                        | Level One
                        span.fa.fa-chevron-down
                      ul.nav.child_menu
                        li.sub_menu
                          a(href='level2.html') Level Two
                        li
                          a(href='#level2_1') Level Two
                        li
                          a(href='#level2_2') Level Two
                    li
                      a(href='#level1_2') Level One
                li
                  a(href='javascript:void(0)')
                    i.fa.fa-laptop
                    |  Landing Page 
                    span.label.label-success.pull-right Coming Soon
          // /sidebar menu
          // /menu footer buttons
          .sidebar-footer.hidden-small
            a(data-toggle='tooltip' data-placement='top' title='Settings')
              span.glyphicon.glyphicon-cog(aria-hidden='true')
            a(data-toggle='tooltip' data-placement='top' title='FullScreen')
              span.glyphicon.glyphicon-fullscreen(aria-hidden='true')
            a#refresh(data-toggle='tooltip' data-placement='top' title='Refresh')
              span.glyphicon.glyphicon-refresh(aria-hidden='true')
            a(data-toggle='tooltip' data-placement='top' title='Logout' onclick='logout();')
              span.glyphicon.glyphicon-log-out(aria-hidden='true')
          // /menu footer buttons
      // top navigation

      .top_nav
        .nav_menu
          nav
            .nav.toggle
              a#menu_toggle
                i.fa.fa-bars
            ul.nav.navbar-nav.navbar-right
              li
                a.user-profile.dropdown-toggle(href='javascript:;' data-toggle='dropdown' aria-expanded='false')
                  img(src='images/img.jpg' alt='')
                  | #{username}
                  span.fa.fa-angle-down
                ul.dropdown-menu.dropdown-usermenu.pull-right
                  li
                    a(href='javascript:;')  Profile
                  li
                    a(href='javascript:;')
                      span.badge.bg-red.pull-right 50%
                      span Settings
                  li
                    a(href='javascript:;') Help
                  li
                    a(onclick='logout();')
                      i.fa.fa-sign-out.pull-right
                      |  Log Out
              li.dropdown(role='presentation')
                a.dropdown-toggle.info-number(href='javascript:;' data-toggle='dropdown' aria-expanded='false')
                  i.fa.fa-envelope-o
                  span.badge.bg-green 6
                ul#menu1.dropdown-menu.list-unstyled.msg_list(role='menu')
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    a
                      span.image
                        img(src='images/img.jpg' alt='Profile Image')
                      span
                        span John Smith
                        span.time 3 mins ago
                      span.message
                        | Film festivals used to be do-or-die moments for movie makers. They were where...
                  li
                    .text-center
                      a
                        strong See All Alerts
                        i.fa.fa-angle-right

      // /top navigation
      // page content
      .right_col(role='main')
        .row.top_tiles
          .col-md-12
            .x_panel
              .x_title
                h2
                  | Transfer
                  // Button trigger modal
                
                ul.navbar-right.panel_toolbox(style='list-style-type: none;')
                  li
                    a.collapse-link
                      i.fa.fa-chevron-up
                .clearfix
              .x_content
                .row(style='border-bottom: 1px solid #E0E0E0; padding-bottom: 5px; margin-bottom: 5px;')
                  button.btn.btn-primary(data-toggle='modal' data-target='#Transfer' style='margin-left: 10px;margin-bottom:15px')
                    i.fa.fa-plus-circle.fw-fa
                    |  Add Transfer
                  // Modal
                  #Transfer.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                    .modal-dialog.modal-dialog-centered(role='document')
                      .modal-content
                        .modal-header
                          h2#exampleModalLongTitle.modal-title(style="display:inline;") Add Transfer
                          button.close(type='button' data-dismiss='modal' aria-label='Close')
                            h1(aria-hidden='true' style="color:red") &times;
                        form(action='/transfer/authtransfer' method='post')
                          .modal-body
                            .row
                              .col-md-8
                                .form-group
                                  label(for='first') From Account
                                  br
                                  select#src.custom-select.form-control(name='src' onchange='selectsrc()')
                                    option(value='0' selected='') Select
                                    each b in list1
                                        option(value=''+[b.account_name]) #{b.account_name}
                                  strong#errorfrom(style="color:red;display:none") Error
                                .form-group
                                  label(for='first' style='margin-top:10px') To Account
                                  br
                                  select#dest.custom-select.form-control(name='dest' onchange='selectdest()')
                                    option(value='0' selected='') Select
                                    each b in list1
                                        option(value=''+[b.account_name]) #{b.account_name}
                                  strong#errorto(style="color:red;display:none") Error
                                label(for='3' style='margin-top:10px') Transfer Category
                                  .select
                                    img#imagename(style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png') 
                                      
                                    select#selectname.custom-select.form-control(style='width:338px;display:inline-block' onchange='categname()' name='category' title="Select your category")
                                        option(value='0' selected='') Select
                                        each resu in listcategory
                                            option(value=''+[resu.category_name]) #{resu.category_name}
                                strong#errorcategory(style="color:red;display:none") Error
                                .form-group
                                  label(for='second') Amount
                                  input#amount.form-control(type='number' name='amount' oninput='refresh()')
                                  strong#erroramount(style="color:red;display:none") Error
                                .form-group
                                  label(for='second') Transfer Rate
                                  input#trate.form-control(type='number' name='trate' oninput='refresh()')
                                  strong#errorrate(style="color:red;display:none") Error
                                .form-group
                                  label(for='4') Transfer Date
                                  input#inptdate.form-control.transferdate(type='text' name='inptdate' oninput='refresh()')
                                  strong#errordate(style="color:red;display:none") Error
                                label(for='note') Note
                                input#note.form-control(type='text' name='note' oninput='refresh()')
                                strong#errornote(style="color:red;display:none") Error
                              .col-md-4
                                .form-group
                                  label From Currency
                                  input#fromcur.form-control(type='text' name='fromcur' disabled)
                                .form-group
                                  label(style='margin-top:10px') Currency
                                  input#tocur.form-control(type='text' name='tocur' disabled)
                          .modal-footer
                            button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                            button.btn.btn-primary(type='button' onclick='addtransfer()') Add

                  .table-responsive-md.col-md-12
                    table#main_table.table.table-hover.table-bordered(cellpadding="1" cellspacing="1")
                      thead
                        tr
                          td Account Source
                          td Account Destination
                          td Transfer Category
                          td Transfer Amount
                          td Transfer Date
                          td Tools
                  each a, index in list
                    // Modal
                    div.modal.fade(id='edit'+a.transfer_id tabindex='-1' role='dialog' style="color:black" aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                      .modal-dialog.modal-dialog-centered(role='document')
                        .modal-content
                          .modal-header
                            h2#exampleModalLongTitle.modal-title(style="display:inline") Edit Transfer
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                              h1(aria-hidden='true' style="color:red") &times;
                          //- form(action='/edittransfer' method='post')
                          form
                            .modal-body
                              .row
                                .col-md-8
                                  .form-group
                                    label(for='first') From Account
                                    br
                                    select.custom-select.form-control(id='src'+index name='src' onchange='editselectsrc('+index+')')
                                      if(a.transfer_src==null)
                                        option(value='0' selected='') Select
                                        each b in list1
                                          if(a.transfer_dest!=[b.account_name])
                                            option(value=''+b.account_name) #{b.account_name}
                                      else
                                        option(value=a.transfer_src selected='') #{a.transfer_src}
                                        option(value='0') Select
                                        each b in list1
                                          if(a.transfer_src==[b.account_name] || a.transfer_dest==[b.account_name])
                                          else
                                            option(value=''+b.account_name) #{b.account_name}
                                    strong(id="errorfrom"+index style="color:red;display:none") Error
                                  .form-group
                                    label(for='first' style='margin-top:10px') To Account
                                    br
                                    select.custom-select.form-control(id='dest'+index name='dest' onchange='editselectdest('+index+')')
                                      if(a.transfer_dest==null)
                                        option(value='0' selected='') Select
                                        each b in list1
                                          if(a.transfer_src!=[b.account_name])
                                            option(value=''+b.account_name) #{b.account_name}
                                      else
                                        option(value=a.transfer_dest selected='') #{a.transfer_dest}
                                        option(value='0') Select
                                        each b in list1
                                          if(a.transfer_src==[b.account_name] || a.transfer_dest==[b.account_name])
                                          else
                                            option(value=''+b.account_name) #{b.account_name}
                                    strong(id="errorto"+index style="color:red;display:none") Error

                                  label(for='3' style='margin-top:10px') Transfer Category
                                    .select
                                      //- img#imagename(style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png') 
                                      each y in listcategory
                                        if(a.transfer_category==[y.category_name])
                                          if(y.category_image==31)
                                            img(id='editimagename'+index style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/add.png')
                                          else
                                            img(id='editimagename'+index style='margin-right:10px;width:24px;height:24px;display:inline-block' src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+a.transfer_category+'.png')

                                      select.custom-select.form-control(id='editselectname'+index style='width:338px;display:inline-block' onchange='editcategname('+index+')' name='category' title="Select your category")
                                        if(a.transfer_category==null) 
                                          option(value='0' selected='') Select
                                          each resu in listcategory
                                            option(value=''+resu.category_name) #{resu.category_name}
                                        else
                                          option(value=''+a.transfer_category selected) #{a.transfer_category}
                                          each resu in listcategory
                                            if(a.transfer_category!=[resu.category_name])
                                              option(value=resu.category_name) #{resu.category_name}
                                          //- option(value='0' selected='') Select
                                          //- each resu in listcategory
                                          //-     option(value=''+[resu.category_name]) #{resu.category_name}
                                  strong(id="errorcategory"+index style="color:red;display:none") Error
                                  
                                  .form-group
                                    label(for='second') Amount
                                    input.form-control(id="amount"+index type='number' name='amount' oninput='editrefresh('+index+')' value=a.transfer_amount)
                                    strong(id="erroramount"+index style="color:red;display:none") Error
                                  .form-group
                                    label(for='second') Transfer Rate
                                    input.form-control(id="tfrate"+index type='number' name='trate' oninput='editrefresh('+index+')' value=a.transfer_rate)
                                    strong(id="errorrate"+index style="color:red;display:none") Error
                                  .form-group
                                    label(for='4') Transfer Date
                                    each x in inputdate
                                      if(a.transfer_id==[x.transfer_id])
                                        input.transferdate.form-control(id="inptdate"+index type='text' name='editinptdate' oninput='editrefresh('+index+')' value=x.transfer_date)
                                    
                                    strong(id="errordate"+index style="color:red;display:none") Error
                                  label(for='note') Note
                                  input.form-control(id="note"+index type='text' name='note' oninput='editrefresh('+index+')' value=a.transfer_notes)
                                  strong(id="errornote"+index style="color:red;display:none") Error
                                .col-md-4
                                  .form-group
                                    label From Currency 
                                    each y in list1
                                      if(a.transfer_src==[y.account_name])
                                        input.form-control(id='fromcur'+index type='text' name='fromcur' value=y.account_currency disabled)
                                    //- input#fromcur.form-control(type='text' name='fromcur' disabled)
                                  .form-group
                                    label(style='margin-top:10px') Currency
                                    each y in list1
                                      if(a.transfer_dest==[y.account_name])
                                        input.form-control(id='tocur'+index type='text' name='tocur' value=y.account_currency disabled)
                                    //- input#tocur.form-control(type='text' name='tocur' disabled)
                            .modal-footer
                              input.form-control(style="display:none" id=index type='text' name='test' value=a.transfer_id)
                              button.btn.btn-secondary(type='button' data-dismiss='modal') Close
                              button.btn.btn-primary(type='button' onclick='edittransfer('+index+')') Edit
                              //- if(a.transfer_id!=null)
                                
                              //- else

                    // Modal
                    div.modal.fade(id='delete'+a.transfer_id tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
                      .modal-dialog.modal-dialog-centered(role='document')
                        .modal-content
                          .modal-header
                            h2#exampleModalLongTitle.modal-title(style="color:black;display:inline") Delete Transfer
                            button.close(type='button' data-dismiss='modal' aria-label='Close')
                              h1(aria-hidden='true' style="color:red") &times;
                          form(action='/transfer/deletetransfer' method='post')
                            .modal-body
                              .row
                                .col-md-12
                                  //label(for='1') Name Category
                                  //input#first.form-control(type='text' name='namecate')
                                  p(style="color:black") Are you sure to delete your transfer from #{a.transfer_src} to #{a.transfer_dest} ?
                                  //input#deletecatnums.form-control(type='hidden' name='deletecategnums' value=''+[r.category_image])
                                  input(type='hidden' name='transferid' value=''+a.transfer_id)
                                  input(type='hidden' name='transfers' value=''+a.transfer_src)
                                  input(type='hidden' name='transferd' value=''+a.transfer_dest)
                            .modal-footer
                              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
                              button.btn.btn-primary(type='submit') Delete

      // page content
      // footer content
      footer
        .pull-right
          | Gentelella - Bootstrap Admin Template by 
          a(href='https://colorlib.com') Colorlib
        .clearfix
      // footer content
  script(src="./js/axios.min.js")
    // FastClick
  script(type="text/javascript" src='../vendors/fastclick/lib/fastclick.js')
  // NProgress
  script(type="text/javascript" src='../vendors/nprogress/nprogress.js')
  // Chart.js
  script(type="text/javascript" src='../vendors/Chart.js/dist/Chart.min.js')
  // jQuery Sparklines
  script(type="text/javascript" src='../vendors/jquery-sparkline/dist/jquery.sparkline.min.js')
  // Flot
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.pie.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.time.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.stack.js')
  script(type="text/javascript" src='../vendors/Flot/jquery.flot.resize.js')
  // Flot plugins
  script(type="text/javascript" src='../vendors/flot.orderbars/js/jquery.flot.orderBars.js')
  script(type="text/javascript" src='../vendors/flot-spline/js/jquery.flot.spline.min.js')
  script(type="text/javascript" src='../vendors/flot.curvedlines/curvedLines.js')
  // DateJS
  script(type="text/javascript" src='../vendors/DateJS/build/date.js')
  // bootstrap-daterangepicker
  script(type="text/javascript" src='../vendors/moment/min/moment.min.js')
  script(type="text/javascript" src='../vendors/bootstrap-daterangepicker/daterangepicker.js')
  // Custom Theme Scripts
  script(type="text/javascript" src='../build/js/custom.min.js')
  script(type="text/javascript" src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js")

  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js')
  
  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/dataTables.semanticui.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js')
  script(type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js')
  script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js')
  script(type="text/javascript" src='https://cdn.datatables.net/1.10.19/js/dataTables.material.min.js')

  //- script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')
  //- script(type="text/javascript" src='https://cdn.datatables.net/buttons/1.5.6/js/buttons.semanticui.min.js')

  //- script(type='text/javascript' charset="utf8" src='https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js')

  script.
    $(function() {
      $('.transferdate').daterangepicker({
        singleDatePicker: true,
        showDropdowns: true
      }, function(start, end, label) {
        console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
      });
    });
  
    $('#refresh').click(function() {
        location.reload();
    });
    //- var dataincome=[],dataexpense=[],datatransfer=[]
    axios.get('/is_login')
      .then(response=> {
        if(!response.data.status){
          window.location.replace ("/");
          console.log("Masuk")
        }
      
        axios.get('/transfer/listtransfer')
        .then(response=> {
          console.log(response.data.datatransfer)
          var rows=[], rowschart=[]
          //- var select_account = document.getElementById("select_account");
          for(var j=0;j<response.data.dataaccount.length;j++){
            for(var i=0;i<response.data.datatransfer.length;i++){
              if(response.data.datatransfer[i]["transfer_src"]==response.data.dataaccount[j]["account_name"]){
                rows.push([response.data.datatransfer[i]["transfer_src"], response.data.datatransfer[i]["transfer_dest"],
                response.data.datatransfer[j]["transfer_category"], response.data.dataaccount[j]["account_fullcurrency"].substring(4)+" "+response.data.datatransfer[i]["transfer_amount"], response.data.datatransfer[i]["transfer_date"], 
                "<button data-toggle='modal' data-target="+'#edit'+response.data.datatransfer[i]["transfer_id"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.datatransfer[i]["transfer_id"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])
              }
              else if(response.data.datatransfer[i]["transfer_src"]==response.data.dataaccount[j]["account_name"]){
                rows.push([response.data.datatransfer[i]["transfer_src"], response.data.datatransfer[i]["transfer_dest"],
                response.data.datatransfer[j]["transfer_category"], response.data.dataaccount[j]["account_fullcurrency"].substring(4)+" "+response.data.datatransfer[i]["transfer_amount"], response.data.datatransfer[i]["transfer_date"], 
                "<button data-toggle='modal' data-target="+'#edit'+response.data.datatransfer[i]["transfer_id"]+  " class='btn btn-default'><i class='fa fa-pencil'></i></button><button  data-toggle='modal' data-target="+'#delete'+response.data.datatransfer[i]["transfer_id"]+  " class='btn btn-default'><i class='fa fa-trash'></i></button>"])
              }
            }
          }
          
          $('#main_table').DataTable( {
              data: rows,
              dom: 'Bfrtip',
              columnDefs: [ {
                "targets": 5,
                "orderable": false,
                "className":"text-center"
              },
              {
                "targets": [0,1,2,4],
                "className":"text-center"
              },
              {
                "targets": [3],
                "className":"text-right"
              }
              ],
              lengthMenu: [
                [ 10, 25, 50, -1 ],
                [ '10 rows', '25 rows', '50 rows', 'Show all' ]
              ],
              //- buttons: [
                  
              //- ]
              buttons: [
                  'pageLength',
                  {
                      extend: 'pdfHtml5',
                      download: 'open'
                  }
              ]
          } );
        })
        .catch(function (error) {
          console.log(error);
        });
      })
      .catch(function (error) {
        console.log(error);
      });


    function logout(){
      axios.get('/logout')
        .then(response=> {
            window.location.replace ("/");
        })
        .catch(function (error) {
          console.log(error);
        });
    }

    function editcategname(index){
      var num;
      var tes = document.getElementById("editselectname"+index).value;
      console.log(tes);
      if(tes=='cashicon'){
        num=1;
      }
      else if(tes=='bank'){
        num=2;
      }
      else if(tes=='lend'){
        num=3;
      }
      else if(tes=='cheque'){
        num=4;
      }
      else if(tes=='creditcard'){
        num=5;
      }
      else if(tes=='food'){
        num=6;
      }
      else if(tes=='electric'){
        num=7;
      }
      else if(tes=='truck'){
        num=8;
      }
      else if(tes=='health'){
        num=9;
      }
      else if(tes=='ball'){
        num=10;
      }
      else if(tes=='house'){
        num=11;
      }
      else if(tes=='water'){
        num=12;
      }
      else if(tes=='clothes'){
        num=13;
      }
      else if(tes=='movie'){
        num=14;
      }
      else if(tes=='poker'){
        num=15;
      }
      else if(tes=='car'){
        num=16;
      }
      else if(tes=='accident'){
        num=17;
      }
      else if(tes=='daily'){
        num=18;
      }
      else if(tes=='tax'){
        num=19;
      }
      else if(tes=='pet'){
        num=20;
      }
      else if(tes=='computer'){
        num=21;
      }
      else if(tes=='plane'){
        num=22;
      }
      else if(tes=='gasoline'){
        num=23;
      }
      else if(tes=='garden'){
        num=24;
      }
      else if(tes=='bitcoin'){
        num=25;
      }
      else if(tes=='insurance'){
        num=26;
      }
      else if(tes=='investment'){
        num=27;
      }
      else if(tes=='fixing'){
        num=28;
      }
      else if(tes=='medical'){
        num=29;
      }
      else if(tes=='drink'){
        num=30;
      }
      else{
        num=31;
        tes='add';
        
      }
      if(tes=='0'){
        document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/falses.png';
      }
      else{
        console.log(tes)
        document.getElementById("editimagename"+index).src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
      }
    }

    var errorfrom = document.getElementById("errorfrom");
    var errorto = document.getElementById("errorto");
    var errorcategory = document.getElementById("errorcategory");
    var erroramount = document.getElementById("erroramount");
    var errorrate = document.getElementById("errorrate");
    var errordate = document.getElementById("errordate");
    var errornote = document.getElementById("errornote");

    var Src;
    var Dest;
    var Amount;
    var InputDate;
    var Rate;
    var Note;
    var fromcur,tocur;

    function refresh(){
      addbutton=false;
      errorfrom.style.display="none";
      errorto.style.display="none";
      errorcategory.style.display="none";
      erroramount.style.display="none";
      errorrate.style.display="none";
      errordate.style.display="none";
      errornote.style.display="none";

    }

    function editrefresh(index){
      var editerrorfrom = document.getElementById("errorfrom"+index);
      var editerrorto = document.getElementById("errorto"+index);
      var editerrorcategory = document.getElementById("errorcategory"+index);
      var editerroramount = document.getElementById("erroramount"+index);
      var editerrorrate = document.getElementById("errorrate"+index);
      var editerrordate = document.getElementById("errordate"+index);
      var editerrornote = document.getElementById("errornote"+index);
      editbutton=false;
      editerrorfrom.style.display="none";
      editerrorto.style.display="none";
      editerrorcategory.style.display="none";
      editerroramount.style.display="none";
      editerrorrate.style.display="none";
      editerrordate.style.display="none";
      editerrornote.style.display="none";

    }

    function selectsrc(){
      Src= document.getElementById("src").value;
      Dest= document.getElementById("dest").value;
      fromcur= document.getElementById("fromcur");
      var Srcs=document.getElementById("src")
      var Dests=document.getElementById("dest")
      
      for(var option in Dests){
          Dests.remove(option);
        }
      if(Dest=='0'){
        if(Src!='0'){
          addbutton=false;
          errorfrom.style.display="none";
          errorto.style.display="none";
          errorcategory.style.display="none";
          erroramount.style.display="none";
          errorrate.style.display="none";
          errordate.style.display="none";
          errornote.style.display="none";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Dests.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                if(response.data.dataaccount[i]["account_name"]!=Src){
                  var option = document.createElement("option");
                  option.text=response.data.dataaccount[i]["account_name"];
                  option.value=response.data.dataaccount[i]["account_name"];
                  Dests.add(option,null);
                }
                else{
                  fromcur.value=response.data.dataaccount[i]["account_currency"];
                  console.log(fromcur.value)
                }
              }
              
            })
            .catch(function (error) {
              console.log(error);
            });
        }
        else{
          fromcur.value="";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Dests.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
      }
      else{
        addbutton=false;
        errorfrom.style.display="none";
        errorto.style.display="none";
        errorcategory.style.display="none";
        erroramount.style.display="none";
        errorrate.style.display="none";
        errordate.style.display="none";
        errornote.style.display="none";
        axios.get('/account/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text=Dest;
            option.value=Dest;
            Dests.add(option,null);
            Dests.selected;
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
              else if(response.data.dataaccount[i]["account_name"]!=Dest){
                fromcur.value=response.data.dataaccount[i]["account_currency"];
                console.log(fromcur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }

    function selectdest(){
      Dest= document.getElementById("dest").value;
      Src= document.getElementById("src").value;
      tocur= document.getElementById("tocur");
      var Srcs=document.getElementById("src")
      var Dests=document.getElementById("dest")
      
      for(var option in Srcs){
        Srcs.remove(option);
      }
      if(Src=='0'){
        
        
        if(Dest!='0'){

          addbutton=false;
          errorfrom.style.display="none";
          errorto.style.display="none";
          errorcategory.style.display="none";
          erroramount.style.display="none";
          errorrate.style.display="none";
          errordate.style.display="none";
          errornote.style.display="none";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Srcs.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                if(response.data.dataaccount[i]["account_name"]!=Dest){
                  var option = document.createElement("option");
                  option.text=response.data.dataaccount[i]["account_name"];
                  option.value=response.data.dataaccount[i]["account_name"];
                  Srcs.add(option,null);
                }
                else{
                  tocur.value=response.data.dataaccount[i]["account_currency"];
                  console.log(tocur.value)
                }
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
        else{
          tocur.value="";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Srcs.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
      }
      else{
        addbutton=false;
        errorfrom.style.display="none";
        errorto.style.display="none";
        errorcategory.style.display="none";
        erroramount.style.display="none";
        errorrate.style.display="none";
        errordate.style.display="none";
        errornote.style.display="none";
        axios.get('/account/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text=Src;
            option.value=Src;
            Srcs.add(option,null);
            Srcs.selected;
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            console.log(Src)
            var pos=0;
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
                console.log(response.data.dataaccount[i]["account_name"])
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
              
              else if(response.data.dataaccount[i]["account_name"]==Dest){    
                tocur.value=response.data.dataaccount[i]["account_currency"];
                console.log(tocur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });

      }
    }

    function editselectsrc(x){
      Src= document.getElementById("src"+x).value;
      Dest= document.getElementById("dest"+x).value;
      fromcur= document.getElementById("fromcur"+x);
      var Srcs=document.getElementById("src"+x)
      var Dests=document.getElementById("dest"+x)

      var editerrorfrom = document.getElementById("errorfrom"+x);
      var editerrorto = document.getElementById("errorto"+x);
      var editerrorcategory = document.getElementById("errorcategory"+x);
      var editerroramount = document.getElementById("erroramount"+x);
      var editerrorrate = document.getElementById("errorrate"+x);
      var editerrordate = document.getElementById("errordate"+x);
      var editerrornote = document.getElementById("errornote"+x);
      editbutton=false;
      editerrorfrom.style.display="none";
      editerrorto.style.display="none";
      editerrorcategory.style.display="none";
      editerroramount.style.display="none";
      editerrorrate.style.display="none";
      editerrordate.style.display="none";
      editerrornote.style.display="none";

      for(var option in Dests){
          Dests.remove(option);
        }
      if(Dest=='0'){
        //- if(Src!='0'){
        if(Src!='0') {
          //- addbutton=false;
          //- errorfrom.style.display="none";
          //- errorto.style.display="none";
          //- errorcategory.style.display="none";
          //- erroramount.style.display="none";
          //- errorrate.style.display="none";
          //- errordate.style.display="none";
          //- errornote.style.display="none";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Dests.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                if(response.data.dataaccount[i]["account_name"]!=Src){
                  var option = document.createElement("option");
                  option.text=response.data.dataaccount[i]["account_name"];
                  option.value=response.data.dataaccount[i]["account_name"];
                  Dests.add(option,null);
                }
                else{
                  fromcur.value=response.data.dataaccount[i]["account_currency"];
                  console.log(fromcur.value)
                }
              }
              
            })
            .catch(function (error) {
              console.log(error);
            });
        }
        else{
          fromcur.value="";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Dests.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
      }
      else{
        //- addbutton=false;
        //- errorfrom.style.display="none";
        //- errorto.style.display="none";
        //- errorcategory.style.display="none";
        //- erroramount.style.display="none";
        //- errorrate.style.display="none";
        //- errordate.style.display="none";
        //- errornote.style.display="none";
        axios.get('/account/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text=Dest;
            option.value=Dest;
            Dests.add(option,null);
            Dests.selected;
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Dests.add(option,null);
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Dests.add(option,null);
              }
              else if(response.data.dataaccount[i]["account_name"]!=Dest){
                fromcur.value=response.data.dataaccount[i]["account_currency"];
                console.log(fromcur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }

    function editselectdest(x){
      Dest= document.getElementById("dest"+x).value;
      Src= document.getElementById("src"+x).value;
      tocur= document.getElementById("tocur"+x);
      var Srcs=document.getElementById("src"+x)
      var Dests=document.getElementById("dest"+x)

      var editerrorfrom = document.getElementById("errorfrom"+x);
      var editerrorto = document.getElementById("errorto"+x);
      var editerrorcategory = document.getElementById("errorcategory"+x);
      var editerroramount = document.getElementById("erroramount"+x);
      var editerrorrate = document.getElementById("errorrate"+x);
      var editerrordate = document.getElementById("errordate"+x);
      var editerrornote = document.getElementById("errornote"+x);
      editbutton=false;
      editerrorfrom.style.display="none";
      editerrorto.style.display="none";
      editerrorcategory.style.display="none";
      editerroramount.style.display="none";
      editerrorrate.style.display="none";
      editerrordate.style.display="none";
      editerrornote.style.display="none";

      for(var option in Srcs){
        Srcs.remove(option);
      }
      if(Src=='0'){
        if(Dest!='0'){
          //- addbutton=false;
          //- errorfrom.style.display="none";
          //- errorto.style.display="none";
          //- errorcategory.style.display="none";
          //- erroramount.style.display="none";
          //- errorrate.style.display="none";
          //- errordate.style.display="none";
          //- errornote.style.display="none";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Srcs.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                if(response.data.dataaccount[i]["account_name"]!=Dest){
                  var option = document.createElement("option");
                  option.text=response.data.dataaccount[i]["account_name"];
                  option.value=response.data.dataaccount[i]["account_name"];
                  Srcs.add(option,null);
                }
                else{
                  tocur.value=response.data.dataaccount[i]["account_currency"];
                  console.log(tocur.value)
                }
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
        else{
          tocur.value="";
          axios.get('/account/listaccount')
            .then(response=> {
              var option = document.createElement("option");
              option.text="Select";
              option.value="0";
              Srcs.add(option,null);
              for(var i=0;i<response.data.dataaccount.length;i++){
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
      }
      else{
        //- addbutton=false;
        //- errorfrom.style.display="none";
        //- errorto.style.display="none";
        //- errorcategory.style.display="none";
        //- erroramount.style.display="none";
        //- errorrate.style.display="none";
        //- errordate.style.display="none";
        //- errornote.style.display="none";
        axios.get('/account/listaccount')
          .then(response=> {
            var option = document.createElement("option");
            option.text=Src;
            option.value=Src;
            Srcs.add(option,null);
            Srcs.selected;
            var option = document.createElement("option");
            option.text="Select";
            option.value="0";
            Srcs.add(option,null);
            console.log(Src)
            var pos=0;
            for(var i=0;i<response.data.dataaccount.length;i++){
              if(response.data.dataaccount[i]["account_name"]!=Dest && response.data.dataaccount[i]["account_name"]!=Src){
                console.log(response.data.dataaccount[i]["account_name"])
                var option = document.createElement("option");
                option.text=response.data.dataaccount[i]["account_name"];
                option.value=response.data.dataaccount[i]["account_name"];
                Srcs.add(option,null);
              }
              
              else if(response.data.dataaccount[i]["account_name"]==Dest){    
                tocur.value=response.data.dataaccount[i]["account_currency"];
                console.log(tocur.value)
              }
            }
            
          })
          .catch(function (error) {
            console.log(error);
          });

      }
    }

    var categoryname;
    function categname(){
      addbutton=false;
      errorfrom.style.display="none";
      errorto.style.display="none";
      errorcategory.style.display="none";
      erroramount.style.display="none";
      errorrate.style.display="none";
      errordate.style.display="none";
      errornote.style.display="none";
      var num;
      var tes = document.getElementById("selectname").value;
      categoryname=tes;
      if(tes=='cashicon'){
        num=1;
      }
      else if(tes=='bank'){
        num=2;
      }
      else if(tes=='lend'){
        num=3;
      }
      else if(tes=='cheque'){
        num=4;
      }
      else if(tes=='creditcard'){
        num=5;
      }
      else if(tes=='food'){
        num=6;
      }
      else if(tes=='electric'){
        num=7;
      }
      else if(tes=='truck'){
        num=8;
      }
      else if(tes=='health'){
        num=9;
      }
      else if(tes=='ball'){
        num=10;
      }
      else if(tes=='house'){
        num=11;
      }
      else if(tes=='water'){
        num=12;
      }
      else if(tes=='clothes'){
        num=13;
      }
      else if(tes=='movie'){
        num=14;
      }
      else if(tes=='poker'){
        num=15;
      }
      else if(tes=='car'){
        num=16;
      }
      else if(tes=='accident'){
        num=17;
      }
      else if(tes=='daily'){
        num=18;
      }
      else if(tes=='tax'){
        num=19;
      }
      else if(tes=='pet'){
        num=20;
      }
      else if(tes=='computer'){
        num=21;
      }
      else if(tes=='plane'){
        num=22;
      }
      else if(tes=='gasoline'){
        num=23;
      }
      else if(tes=='garden'){
        num=24;
      }
      else if(tes=='bitcoin'){
        num=25;
      }
      else if(tes=='insurance'){
        num=26;
      }
      else if(tes=='investment'){
        num=27;
      }
      else if(tes=='fixing'){
        num=28;
      }
      else if(tes=='medical'){
        num=29;
      }
      else if(tes=='drink'){
        num=30;
      }
      else if(tes=='0'){
        tes='falses';
      }
      else{
        num=31;
        tes='add';
      }
      document.getElementById("imagename").src='https://raw.githubusercontent.com/winargo/midascash/master/app/src/main/res/drawable/'+tes+'.png';
    }

    var addvalid=true, editvalid=true;
    var addbutton=false, editbutton=false;
    function addtransfer(){
      addbutton=true;
      addvalidasi();
    }

    function edittransfer(index){
      var id=document.getElementById(index).value;
      console.log("Masuk")
      console.log(id)
      editbutton=true;
      editvalidasi(index);
    }

    function addvalidasi(){
      addvalid=true;
      
      var src=false;
      var dest=false;
      var category=false;
      var amount=false;
      var rate=false;
      var inputdate=false;
      var note=false;

      Amount = document.getElementById("amount").value;
      InputDate = document.getElementById("inptdate").value;
      Note = document.getElementById("note").value;
      Rate = document.getElementById("trate").value;
      categoryname=document.getElementById("selectname").value;
      Src=document.getElementById("src").value;
      Dest=document.getElementById("dest").value;
      console.log(categoryname);
      if(Src=="0"){
        addvalid=false;
        src=true;
        errorfrom.innerHTML="Please input Account From";
        errorfrom.style.display="inline";
      }
      if(Dest=="0"){
        addvalid=false;
        dest=true;
        errorto.innerHTML="Please input Account To";
        errorto.style.display="inline";
      }
      if(categoryname=="0"){
        addvalid=false;
        category=true;
        errorcategory.innerHTML="Please input Transfer Category";
        errorcategory.style.display="inline";
      }
      if(Rate=="" || Rate=="0"){
        addvalid=false;
        rate=true;
        errorrate.innerHTML="Please input Transfer Rate";
        errorrate.style.display="inline";
      }
      if(InputDate==""){
        addvalid=false;
        inputdate=true;
        errordate.innerHTML="Please input Transfer Date";
        errordate.style.display="inline";
      }
      if(Note==""){
        addvalid=false;
        note=true;
        errornote.innerHTML="Please input Transfer Note";
        errornote.style.display="inline";
      }
      if(Amount==0 || Amount==""){
        addvalid=false;
        amount=true;
        erroramount.innerHTML="Please input Initial Amount";
        erroramount.style.display="inline";
      }
      if(Src!='0'){
        axios.post('/account/currentbalance', {
          nameacc: Src
        })
        .then(response=> {
          if(parseInt(Amount)>=parseInt(response.data.balance)){
            addvalid=false;
            amount=true;
            erroramount.innerHTML="Your Amount must lower than "+response.data.currency+response.data.balance;
            erroramount.style.display="inline";
          }

          console.log(addvalid+"\n"+addbutton);
          if(addvalid){
            if(addbutton){
              console.log("Add Transfer");
              axios.post('/transfer/authtransfer', {
                src: Src,
                dest: Dest,
                category: categoryname,
                amount: Amount,
                inptdate: InputDate,
                note: Note
              })
                .then(response=> {
                  window.location.replace ("/transfer");
                  console.log(response.data);
              })
              .catch(function (error) {
                console.log(error);
              });
            }
          }
        })
        .catch(function (error) {
          console.log(error);
        });
      }
    }

    function editvalidasi(index){
      editvalid=true;
      
      var src=false;
      var dest=false;
      var category=false;
      var amount=false;
      var rate=false;
      var inputdate=false;
      var note=false;

      Amount = document.getElementById("amount"+index).value;
      InputDate = document.getElementById("inptdate"+index).value;
      Note = document.getElementById("note"+index).value;
      Rate = document.getElementById("tfrate"+index).value;
      categoryname=document.getElementById("editselectname"+index).value;
      Src=document.getElementById("src"+index).value;
      Dest=document.getElementById("dest"+index).value;

      var editerrorfrom = document.getElementById("errorfrom"+index);
      var editerrorto = document.getElementById("errorto"+index);
      var editerrorcategory = document.getElementById("errorcategory"+index);
      var editerroramount = document.getElementById("erroramount"+index);
      var editerrorrate = document.getElementById("errorrate"+index);
      var editerrordate = document.getElementById("errordate"+index);
      var editerrornote = document.getElementById("errornote"+index);
      console.log(categoryname);
      if(Src=="0"){
        editvalid=false;
        src=true;
        editerrorfrom.innerHTML="Please input Account From";
        editerrorfrom.style.display="inline";
      }
      if(Dest=="0"){
        editvalid=false;
        dest=true;
        editerrorto.innerHTML="Please input Account To";
        editerrorto.style.display="inline";
      }
      if(categoryname=="0"){
        editvalid=false;
        category=true;
        editerrorcategory.innerHTML="Please input Transfer Category";
        editerrorcategory.style.display="inline";
      }
      if(Rate=="" || Rate=="0"){
        editvalid=false;
        rate=true;
        editerrorrate.innerHTML="Please input Transfer Rate";
        editerrorrate.style.display="inline";
      }
      if(InputDate==""){
        editvalid=false;
        inputdate=true;
        editerrordate.innerHTML="Please input Transfer Date";
        editerrordate.style.display="inline";
      }
      if(Note==""){
        editvalid=false;
        note=true;
        editerrornote.innerHTML="Please input Transfer Note";
        editerrornote.style.display="inline";
      }
      if(Amount==0 || Amount==""){
        editvalid=false;
        amount=true;
        editerroramount.innerHTML="Please input Initial Amount";
        editerroramount.style.display="inline";
      }
      if(Src!='0'){
        axios.post('/account/currentbalance', {
          nameacc: Src
        })
        .then(response=> {
          if(parseInt(Amount)>=parseInt(response.data.balance)){
            editvalid=false;
            amount=true;
            editerroramount.innerHTML="Your Amount must lower than "+response.data.currency+response.data.balance;
            editerroramount.style.display="inline";
          }

          console.log(editvalid+"\n"+editbutton);
          if(editvalid){
            if(editbutton){
              console.log("Edit Transfer");
              //- axios.post('/authtransfer', {
              //-   src: Src,
              //-   dest: Dest,
              //-   category: categoryname,
              //-   amount: Amount,
              //-   inptdate: InputDate,
              //-   note: Note
              //- })
              //-   .then(response=> {
              //-     window.location.replace ("/transfer");
              //-     console.log(response.data);
              //- })
              //- .catch(function (error) {
              //-   console.log(error);
              //- });
            }
          }
        })
        .catch(function (error) {
          console.log(error);
        });
      }
    }